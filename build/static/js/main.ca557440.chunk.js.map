{"version":3,"sources":["utils/storageUtils.js","redux/action-types.js","redux/reducer.js","redux/store.js","api/ajax.js","api/index.js","redux/actions.js","pages/login/login.jsx","config/menuConfig.js","components/left-nav/index.jsx","components/link-button/index.jsx","utils/dateUtils.js","components/header/index.jsx","pages/home/line.jsx","pages/home/bar.jsx","pages/home/home.jsx","pages/category/add-form.jsx","pages/category/update-form.jsx","pages/category/category.jsx","utils/constants.js","utils/memoryUtils.js","pages/product/home.jsx","pages/product/pictures-wall.jsx","pages/product/rich-text-editor.jsx","pages/product/add-update.jsx","pages/product/detail.jsx","pages/product/product.jsx","pages/role/add-form.jsx","pages/role/auth-form.jsx","pages/role/role.jsx","pages/user/user-form.jsx","pages/user/user.jsx","pages/charts/bar.jsx","pages/charts/line.jsx","pages/charts/pie.jsx","pages/not-found/not-found.jsx","pages/order/order.jsx","pages/admin/admin.jsx","App.js","index.js","assets/images/logo.png"],"names":["storageUtils","user","store","set","remove","SET_HEAD_TITLE","RECEIVE_USER","SHOW_ERROR_MSG","RESET_USER","initHeadTitle","initUser","get","combineReducers","headTitle","state","arguments","length","undefined","action","type","data","errorMsg","Object","objectSpread2","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ajax","url","Promise","resolve","reject","axios","params","post","then","response","catch","error","message","reqLogin","username","password","reqCategorys","parentId","reqAddCategory","categoryName","reqUpdateCategory","_ref","categoryId","reqCategory","reqProducts","pageNum","pageSize","reqUpdateStatus","productId","status","reqSearchProducts","_ref2","searchName","searchType","defineProperty","reqDeleteImg","name","reqAddOrUpdateProduct","product","_id","reqRoles","reqAddRole","roleName","reqUpdateRole","role","reqUsers","reqDeleteUser","userId","reqAddOrUpdateUser","reqWeather","city","concat","jsonp","err","console","log","_data$results$0$weath","results","weather_data","dayPictureUrl","weather","setHeadTitle","receiveUser","logout","Item","es_form","Login","handleSubmit","event","preventDefault","_this","props","form","validateFields","values","regenerator_default","a","async","_context","prev","next","login","stop","validatePwd","rule","value","callback","test","this","react_default","createElement","react_router","to","getFieldDecorator","className","src","logo","alt","onSubmit","rules","required","whitespace","min","max","pattern","initialValue","input","prefix","icon","style","color","placeholder","validator","es_button","htmlType","Component","WrapLogin","create","connect","dispatch","result","msg","awrap","sent","menuList","title","key","isPublic","children","SubMenu","menu","LeftNav","hasAuth","item","menus","indexOf","find","child","getMenuNodes_map","map","getMenuNodes","react_router_dom","path","location","pathname","reduce","pre","cItem","openKey","push","onClick","menuNodes","mode","theme","selectedKeys","defaultOpenKeys","withRouter","LinkButton","assign","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","Header","currentTime","now","getTime","intervalId","setInterval","setState","getWeather","getTitle","forEach","modal","confirm","content","onOk","assertThisInitialized","clearInterval","_this$state","Line","dv","DataSet","createView","source","month","b","c","transform","fields","float","width","height","BizCharts","scale","range","forceFit","label","formatter","val","crosshairs","position","size","shape","stroke","lineWidth","React","Bar","marginLeft","year","sales","tickInterval","RangePicker","Home","isVisited","handleChange","card","extra","headStyle","statistic","suffix","fontWeight","valueStyle","fontSize","line_Line","defaultValue","moment","format","bodyStyle","padding","bar_Bar","timeline","Option","es_select","AddForm","setForm","_this$props","categorys","add_form_Item","add_form","UpdateForm","update_form_Item","update_form","Category","loading","subCategorys","parentName","showStatus","initColumns","columns","dataIndex","render","category","showUpdate","showSubCategorys","getCategorys","showCategorys","handleCancel","resetFields","showAdd","addCategory","_context2","updateCategory","_context3","_this2","marginRight","table","bordered","rowKey","dataSource","pagination","defaultPageSize","showQuickJumper","visible","onCancel","PAGE_SIZE","BASE_IMG_URL","memoryUtils","ProductHome","total","products","price","newStatus","updateStatus","showDetail","procut","history","getProducts","_result$data","list","success","_this$state2","onChange","home_Option","margin","target","current","PicturesWall","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","previewVisible","previewImage","fileList","getImgs","file","handlePreview","thumbUrl","imgs","img","index","uid","uploadButton","upload","accept","listType","onPreview","footer","RichTextEditor","editorState","EditorState","createEmpty","onEditorStateChange","getDetail","draftToHtml","convertToRaw","getCurrentContent","uploadImageCallBack","xhr","XMLHttpRequest","open","FormData","append","send","addEventListener","JSON","parse","responseText","link","html","detail","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","createWithContent","react_draft_wysiwyg","editorStyle","border","minHeight","paddingLeft","toolbar","image","uploadCallback","present","mandatory","TextArea","ProductAddUpdate","options","initOptions","_assertThisInitialize","isUpdate","pCategoryId","childOptions","isLeaf","option","abrupt","validatePrice","loadData","selectedOptions","targetOption","toConsumableArray","submit","desc","categoryIds","_context4","pw","editor","goBack","createRef","labelCol","span","wrapperCol","add_update_Item","autosize","minRows","maxRows","addonAfter","cascader","pictures_wall_PicturesWall","ref","rich_text_editor_RichTextEditor","PureComponent","add_update","es_list","ProductDetail","cName1","cName2","all","_memoryUtils$product2","detail_Item","dangerouslySetInnerHTML","__html","Product","component","exact","role_add_form_Item","role_add_form","TreeNode","AuthForm","getMenus","checkedKeys","getTreeNodes","onCheck","treeNodes","nextProps","auth_form_Item","disabled","tree","checkable","defaultExpandAll","Role","roles","isShowAdd","isShowAuth","initColumn","create_time","getRoles","onRow","addRole","updateRole","auth","auth_time","auth_name","role_id","rowSelection","selectedRowKeys","onSelect","auth_form_AuthForm","UserForm","user_form_Item","phone","email","user_form_Option","user_form","User","users","isShow","roleNames","deleteUser","initRoleNames","getUsers","addOrUpdateUser","getFieldsValue","stores","update","sale","getOption","text","tooltip","legend","xAxis","yAxis","series","lib_default","Pie","subtext","x","trigger","orient","left","radius","center","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","getOption2","backgroundColor","top","textStyle","visualMap","show","inRange","colorLightness","sort","roseType","normal","labelLine","lineStyle","smooth","length2","animationType","animationEasing","animationDelay","idx","Math","random","NotFound","goHome","replace","row","col","Order","Footer","Sider","Content","Admin","layout","components_left_nav","components_header","from","textAlign","App","ReactDOM","es","App_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.ca557440.chunk.js","sourcesContent":["/*\r\n进行local数据存储管理的工具模块\r\n */\r\nimport store from 'store'\r\nconst USER_KEY = 'user_key'\r\nexport default {\r\n  /*\r\n  保存user\r\n   */\r\n  saveUser (user) {\r\n    // localStorage.setItem(USER_KEY, JSON.stringify(user))\r\n    store.set(USER_KEY, user)\r\n  },\r\n\r\n  /*\r\n  读取user\r\n   */\r\n  getUser () {\r\n    // return JSON.parse(localStorage.getItem(USER_KEY) || '{}')\r\n    return store.get(USER_KEY) || {}\r\n  },\r\n\r\n  /*\r\n  删除user\r\n   */\r\n  removeUser () {\r\n    // localStorage.removeItem(USER_KEY)\r\n    store.remove(USER_KEY)\r\n  }\r\n}","/*\r\n包含n个action的type常量标识名称的模块\r\n */\r\nexport const SET_HEAD_TITLE = 'set_head_title' // 设置头部标题\r\nexport const RECEIVE_USER = 'receive_user'  // 接收用户信息\r\nexport const SHOW_ERROR_MSG = 'show_error_msg' // 显示错误信息\r\nexport const RESET_USER = 'reset_user' // 重置用户信息","/*\r\n用来根据老的state和指定的action生成并返回新的state的函数\r\n */\r\nimport {combineReducers} from 'redux'\r\n\r\n/*\r\n用来管理头部标题的reducer函数\r\n */\r\nimport storageUtils from \"../utils/storageUtils\"\r\nimport {\r\n  SET_HEAD_TITLE,\r\n  RECEIVE_USER,\r\n  SHOW_ERROR_MSG,\r\n  RESET_USER\r\n} from './action-types'\r\n\r\nconst initHeadTitle = ''\r\n\r\nfunction headTitle(state = initHeadTitle, action) {\r\n  switch (action.type) {\r\n    case SET_HEAD_TITLE:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/*\r\n用来管理当前登陆用户的reducer函数\r\n */\r\nconst initUser = storageUtils.getUser()\r\n\r\nfunction user(state = initUser, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_USER:\r\n      return action.user\r\n    case SHOW_ERROR_MSG:\r\n      const errorMsg = action.errorMsg\r\n      // state.errorMsg = errorMsg  // 不要直接修改原本状态数据\r\n      return {...state, errorMsg}\r\n    case RESET_USER:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/*\r\n向外默认暴露的是合并产生的总的reducer函数\r\n管理的总的state的结构:\r\n  {\r\n    headTitle: '首页',\r\n    user: {}\r\n  }\r\n */\r\nexport default combineReducers({\r\n  headTitle,\r\n  user\r\n})","/*\r\nredux最核心的管理对象store\r\n */\r\nimport {createStore, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\n\r\nimport reducer from './reducer'\r\n\r\n// 向外默认暴露store\r\nexport default createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))","/*\r\n能发送异步ajax请求的函数模块\r\n封装axios库\r\n函数的返回值是promise对象\r\n1. 优化1: 统一处理请求异常?\r\n    在外层包一个自己创建的promise对象\r\n    在请求出错时, 不reject(error), 而是显示错误提示\r\n2. 优化2: 异步得到不是reponse, 而是response.data\r\n   在请求成功resolve时: resolve(response.data)\r\n */\r\n\r\nimport axios from 'axios'\r\nimport {message} from 'antd'\r\n\r\nexport default function ajax(url, data={}, type='GET') {\r\n\r\n  return new Promise((resolve, reject) => {\r\n    let promise\r\n    // 1. 执行异步ajax请求\r\n    if(type==='GET') { // 发GET请求\r\n      promise = axios.get(url, { // 配置对象\r\n        params: data // 指定请求参数\r\n      })\r\n    } else { // 发POST请求\r\n      promise = axios.post(url, data)\r\n    }\r\n    // 2. 如果成功了, 调用resolve(value)\r\n    promise.then(response => {\r\n      resolve(response.data)\r\n    // 3. 如果失败了, 不调用reject(reason), 而是提示异常信息\r\n    }).catch(error => {\r\n      // reject(error)\r\n      message.error('请求出错了: ' + error.message)\r\n    })\r\n  })\r\n\r\n\r\n}\r\n\r\n// 请求登陆接口\r\n// ajax('/login', {username: 'Tom', passsword: '12345'}, 'POST').then()\r\n// 添加用户\r\n// ajax('/manage/user/add', {username: 'Tom', passsword: '12345', phone: '13712341234'}, 'POST').then()\r\n","/*\r\n要求: 能根据接口文档定义接口请求\r\n包含应用中所有接口请求函数的模块\r\n每个函数的返回值都是promise\r\n\r\n基本要求: 能根据接口文档定义接口请求函数\r\n */\r\nimport jsonp from 'jsonp'\r\nimport {message} from 'antd'\r\nimport ajax from './ajax'\r\n\r\n// const BASE = 'http://localhost:5000'\r\nconst BASE = ''\r\n// 登陆\r\n/*\r\nexport function reqLogin(username, password) {\r\n  return ajax('/login', {username, password}, 'POST')\r\n}*/\r\nexport const reqLogin = (username, password) => ajax(BASE + '/login', {username, password}, 'POST')\r\n\r\n// 获取一级/二级分类的列表\r\nexport const reqCategorys = (parentId) => ajax(BASE + '/manage/category/list', {parentId})\r\n\r\n// 添加分类\r\nexport const reqAddCategory = (categoryName, parentId) => ajax(BASE + '/manage/category/add', {categoryName, parentId}, 'POST')\r\n\r\n// 更新分类\r\nexport const reqUpdateCategory = ({categoryId, categoryName}) => ajax(BASE + '/manage/category/update', {categoryId, categoryName}, 'POST')\r\n\r\n// 获取一个分类\r\nexport const reqCategory = (categoryId) => ajax(BASE + '/manage/category/info', {categoryId})\r\n\r\n// 获取商品分页列表\r\nexport const reqProducts = (pageNum, pageSize) => ajax(BASE + '/manage/product/list', {pageNum, pageSize})\r\n\r\n// 更新商品的状态(上架/下架)\r\nexport const reqUpdateStatus = (productId, status) => ajax(BASE + '/manage/product/updateStatus', {productId, status}, 'POST')\r\n\r\n\r\n\r\n/*\r\n搜索商品分页列表 (根据商品名称/商品描述)\r\nsearchType: 搜索的类型, productName/productDesc\r\n */\r\nexport const reqSearchProducts = ({pageNum, pageSize, searchName, searchType}) => ajax(BASE + '/manage/product/search', {\r\n  pageNum,\r\n  pageSize,\r\n  [searchType]: searchName,\r\n})\r\n\r\n// 搜索商品分页列表 (根据商品描述)\r\n/*export const reqSearchProducts2 = ({pageNum, pageSize, searchName}) => ajax(BASE + '/manage/product/search', {\r\n  pageNum,\r\n  pageSize,\r\n  productDesc: searchName,\r\n})*/\r\n\r\n// 删除指定名称的图片\r\nexport const reqDeleteImg = (name) => ajax(BASE + '/manage/img/delete', {name}, 'POST')\r\n\r\n// 添加/修改商品\r\nexport const reqAddOrUpdateProduct = (product) => ajax(BASE + '/manage/product/' + ( product._id?'update':'add'), product, 'POST')\r\n// 修改商品\r\n// export const reqUpdateProduct = (product) => ajax(BASE + '/manage/product/update', product, 'POST')\r\n\r\n\r\n// 获取所有角色的列表\r\nexport const reqRoles = () => ajax(BASE + '/manage/role/list')\r\n// 添加角色\r\nexport const reqAddRole = (roleName) => ajax(BASE + '/manage/role/add', {roleName}, 'POST')\r\n// 添加角色\r\nexport const reqUpdateRole = (role) => ajax(BASE + '/manage/role/update', role, 'POST')\r\n\r\n\r\n// 获取所有用户的列表\r\nexport const reqUsers = () => ajax(BASE + '/manage/user/list')\r\n// 删除指定用户\r\nexport const reqDeleteUser = (userId) => ajax(BASE + '/manage/user/delete', {userId}, 'POST')\r\n// 添加/更新用户\r\nexport const reqAddOrUpdateUser = (user) => ajax(BASE + '/manage/user/'+(user._id ? 'update' : 'add'), user, 'POST')\r\n\r\n/*\r\njson请求的接口请求函数\r\n */\r\nexport const reqWeather = (city) => {\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const url = `http://api.map.baidu.com/telematics/v3/weather?location=${city}&output=json&ak=3p49MVra6urFRGOT9s8UBWr2`\r\n    // 发送jsonp请求\r\n    jsonp(url, {}, (err, data) => {\r\n      console.log('jsonp()', err, data)\r\n      // 如果成功了\r\n      if (!err && data.status==='success') {\r\n        // 取出需要的数据\r\n        const {dayPictureUrl, weather} = data.results[0].weather_data[0]\r\n        resolve({dayPictureUrl, weather})\r\n      } else {\r\n        // 如果失败了\r\n        message.error('获取天气信息失败!')\r\n      }\r\n\r\n    })\r\n  })\r\n}\r\n// reqWeather('北京')\r\n/*\r\njsonp解决ajax跨域的原理\r\n  1). jsonp只能解决GET类型的ajax请求跨域问题\r\n  2). jsonp请求不是ajax请求, 而是一般的get请求\r\n  3). 基本原理\r\n   浏览器端:\r\n      动态生成<script>来请求后台接口(src就是接口的url)\r\n      定义好用于接收响应数据的函数(fn), 并将函数名通过请求参数提交给后台(如: callback=fn)\r\n   服务器端:\r\n      接收到请求处理产生结果数据后, 返回一个函数调用的js代码, 并将结果数据作为实参传入函数调用\r\n   浏览器端:\r\n      收到响应自动执行函数调用的js代码, 也就执行了提前定义好的回调函数, 并得到了需要的结果数据\r\n */","/*\r\n包含n个action creator函数的模块\r\n同步action: 对象 {type: 'xxx', data: 数据值}\r\n异步action: 函数  dispatch => {}\r\n */\r\nimport {\r\n  SET_HEAD_TITLE,\r\n  RECEIVE_USER,\r\n  SHOW_ERROR_MSG,\r\n  RESET_USER\r\n} from './action-types'\r\nimport {reqLogin} from '../api'\r\nimport storageUtils from \"../utils/storageUtils\";\r\n\r\n/*\r\n设置头部标题的同步action\r\n */\r\nexport const setHeadTitle = (headTitle) => ({type: SET_HEAD_TITLE, data: headTitle})\r\n\r\n/*\r\n接收用户的同步action\r\n */\r\nexport const receiveUser = (user) => ({type: RECEIVE_USER, user})\r\n\r\n/*\r\n显示错误信息同步action\r\n */\r\nexport const showErrorMsg = (errorMsg) => ({type: SHOW_ERROR_MSG, errorMsg})\r\n\r\n/*\r\n退出登陆的同步action\r\n */\r\nexport const logout = () =>  {\r\n  // 删除local中的user\r\n  storageUtils.removeUser()\r\n  // 返回action对象\r\n  return {type: RESET_USER}\r\n}\r\n\r\n/*\r\n登陆的异步action\r\n */\r\nexport const login = (username, password) => {\r\n  return async dispatch => {\r\n    // 1. 执行异步ajax请求\r\n    const result = await reqLogin(username, password)  // {status: 0, data: user} {status: 1, msg: 'xxx'}\r\n    // 2.1. 如果成功, 分发成功的同步action\r\n    if(result.status===0) {\r\n      const user = result.data\r\n      // 保存local中\r\n      storageUtils.saveUser(user)\r\n      // 分发接收用户的同步action\r\n      dispatch(receiveUser(user))\r\n    } else { // 2.2. 如果失败, 分发失败的同步action\r\n      const msg = result.msg\r\n      // message.error(msg)\r\n      dispatch(showErrorMsg(msg))\r\n    }\r\n\r\n  }\r\n}\r\n","import React, {Component} from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  Button,\r\n} from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport './login.less'\r\nimport logo from '../../assets/images/logo.png'\r\nimport {login} from '../../redux/actions'\r\n\r\nconst Item = Form.Item // 不能写在import之前\r\n\r\n/*\r\n登陆的路由组件\r\n */\r\nclass Login extends Component {\r\n\r\n  handleSubmit = (event) => {\r\n\r\n    // 阻止事件的默认行为\r\n    event.preventDefault()\r\n\r\n    // 对所有表单字段进行检验\r\n    this.props.form.validateFields(async (err, values) => {\r\n      // 检验成功\r\n      if (!err) {\r\n        // console.log('提交登陆的ajax请求', values)\r\n        // 请求登陆\r\n        const {username, password} = values\r\n\r\n        // 调用分发异步action的函数 => 发登陆的异步请求, 有了结果后更新状态\r\n        this.props.login(username, password)\r\n\r\n      } else {\r\n        console.log('检验失败!')\r\n      }\r\n    });\r\n\r\n    // 得到form对象\r\n    // const form = this.props.form\r\n    // // 获取表单项的输入数据\r\n    // const values = form.getFieldsValue()\r\n    // console.log('handleSubmit()', values)\r\n  }\r\n\r\n  /*\r\n  对密码进行自定义验证\r\n  */\r\n  /*\r\n   用户名/密码的的合法性要求\r\n     1). 必须输入\r\n     2). 必须大于等于4位\r\n     3). 必须小于等于12位\r\n     4). 必须是英文、数字或下划线组成\r\n    */\r\n  validatePwd = (rule, value, callback) => {\r\n    console.log('validatePwd()', rule, value)\r\n    if(!value) {\r\n      callback('密码必须输入')\r\n    } else if (value.length<4) {\r\n      callback('密码长度不能小于4位')\r\n    } else if (value.length>12) {\r\n      callback('密码长度不能大于12位')\r\n    } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\r\n      callback('密码必须是英文、数字或下划线组成')\r\n    } else {\r\n      callback() // 验证通过\r\n    }\r\n    // callback('xxxx') // 验证失败, 并指定提示的文本\r\n  }\r\n\r\n  render () {\r\n\r\n    // 如果用户已经登陆, 自动跳转到管理界面\r\n    const user = this.props.user\r\n    if(user && user._id) {\r\n      return <Redirect to='/home'/>\r\n    }\r\n\r\n    // 得到具强大功能的form对象\r\n    const form = this.props.form\r\n    const { getFieldDecorator } = form;\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <header className=\"login-header\">\r\n          <img src={logo} alt=\"logo\"/>\r\n          <h1>React项目: 后台管理系统</h1>\r\n        </header>\r\n        <section className=\"login-content\">\r\n          <div className={user.errorMsg ? 'error-msg show' : 'error-msg'}>{user.errorMsg}</div>\r\n          <h2>用户登陆</h2>\r\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n            <Item>\r\n              {\r\n                /*\r\n              用户名/密码的的合法性要求\r\n                1). 必须输入\r\n                2). 必须大于等于4位\r\n                3). 必须小于等于12位\r\n                4). 必须是英文、数字或下划线组成\r\n               */\r\n              }\r\n              {\r\n                getFieldDecorator('username', { // 配置对象: 属性名是特定的一些名称\r\n                  // 声明式验证: 直接使用别人定义好的验证规则进行验证\r\n                  rules: [\r\n                    { required: true, whitespace: true, message: '用户名必须输入' },\r\n                    { min: 4, message: '用户名至少4位' },\r\n                    { max: 12, message: '用户名最多12位' },\r\n                    { pattern: /^[a-zA-Z0-9_]+$/, message: '用户名必须是英文、数字或下划线组成' },\r\n                  ],\r\n                  initialValue: 'admin', // 初始值\r\n                })(\r\n                  <Input\r\n                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    placeholder=\"用户名\"\r\n                  />\r\n                )\r\n              }\r\n            </Item>\r\n            <Form.Item>\r\n              {\r\n                getFieldDecorator('password', {\r\n                  rules: [\r\n                    {\r\n                      validator: this.validatePwd\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Input\r\n                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    type=\"password\"\r\n                    placeholder=\"密码\"\r\n                  />\r\n                )\r\n              }\r\n\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                登陆\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n/*\r\n1. 高阶函数\r\n    1). 一类特别的函数\r\n        a. 接受函数类型的参数\r\n        b. 返回值是函数\r\n    2). 常见\r\n        a. 定时器: setTimeout()/setInterval()\r\n        b. Promise: Promise(() => {}) then(value => {}, reason => {})\r\n        c. 数组遍历相关的方法: forEach()/filter()/map()/reduce()/find()/findIndex()\r\n        d. 函数对象的bind()\r\n        e. Form.create()() / getFieldDecorator()()\r\n    3). 高阶函数更新动态, 更加具有扩展性\r\n\r\n2. 高阶组件\r\n    1). 本质就是一个函数\r\n    2). 接收一个组件(被包装组件), 返回一个新的组件(包装组件), 包装组件会向被包装组件传入特定属性\r\n    3). 作用: 扩展组件的功能\r\n    4). 高阶组件也是高阶函数: 接收一个组件函数, 返回是一个新的组件函数\r\n */\r\n/*\r\n包装Form组件生成一个新的组件: Form(Login)\r\n新组件会向Form组件传递一个强大的对象属性: form\r\n */\r\nconst WrapLogin = Form.create()(Login)\r\nexport default connect(\r\n  state => ({user: state.user}),\r\n  {login}\r\n)(WrapLogin)\r\n\r\n\r\n/*\r\n1. 前台表单验证\r\n2. 收集表单输入数据\r\n */\r\n\r\n/*\r\nasync和await\r\n1. 作用?\r\n   简化promise对象的使用: 不用再使用then()来指定成功/失败的回调函数\r\n   以同步编码(没有回调函数了)方式实现异步流程\r\n2. 哪里写await?\r\n    在返回promise的表达式左侧写await: 不想要promise, 想要promise异步执行的成功的value数据\r\n3. 哪里写async?\r\n    await所在函数(最近的)定义的左侧写async\r\n */","const menuList = [\r\n  {\r\n    title: '首页', // 菜单标题名称\r\n    key: '/home', // 对应的path\r\n    icon: 'home', // 图标名称\r\n    isPublic: true, // 公开的\r\n  },\r\n  {\r\n    title: '商品',\r\n    key: '/products',\r\n    icon: 'appstore',\r\n    children: [ // 子菜单列表\r\n      {\r\n        title: '品类管理',\r\n        key: '/category',\r\n        icon: 'bars'\r\n      },\r\n      {\r\n        title: '商品管理',\r\n        key: '/product',\r\n        icon: 'tool'\r\n      },\r\n    ]\r\n  },\r\n\r\n  {\r\n    title: '用户管理',\r\n    key: '/user',\r\n    icon: 'user'\r\n  },\r\n  {\r\n    title: '角色管理',\r\n    key: '/role',\r\n    icon: 'safety',\r\n  },\r\n\r\n  {\r\n    title: '图形图表',\r\n    key: '/charts',\r\n    icon: 'area-chart',\r\n    children: [\r\n      {\r\n        title: '柱形图',\r\n        key: '/charts/bar',\r\n        icon: 'bar-chart'\r\n      },\r\n      {\r\n        title: '折线图',\r\n        key: '/charts/line',\r\n        icon: 'line-chart'\r\n      },\r\n      {\r\n        title: '饼图',\r\n        key: '/charts/pie',\r\n        icon: 'pie-chart'\r\n      },\r\n    ]\r\n  },\r\n\r\n  {\r\n    title: '订单管理',\r\n    key: '/order',\r\n    icon: 'windows',\r\n  },\r\n]\r\n\r\nexport default menuList","import React, {Component} from 'react'\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport {Menu, Icon} from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport logo from '../../assets/images/logo.png'\r\nimport menuList from '../../config/menuConfig'\r\nimport './index.less'\r\nimport {setHeadTitle} from '../../redux/actions'\r\n\r\nconst SubMenu = Menu.SubMenu;\r\n\r\n/*\r\n左侧导航的组件\r\n */\r\nclass LeftNav extends Component {\r\n\r\n  /*\r\n  判断当前登陆用户对item是否有权限\r\n   */\r\n  hasAuth = (item) => {\r\n    const {key, isPublic} = item\r\n\r\n    const menus = this.props.user.role.menus\r\n    const username = this.props.user.username\r\n    /*\r\n    1. 如果当前用户是admin\r\n    2. 如果当前item是公开的\r\n    3. 当前用户有此item的权限: key有没有menus中\r\n     */\r\n    if(username==='admin' || isPublic || menus.indexOf(key)!==-1) {\r\n      return true\r\n    } else if(item.children){ // 4. 如果当前用户有此item的某个子item的权限\r\n      return !!item.children.find(child =>  menus.indexOf(child.key)!==-1)\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  /*\r\n  根据menu的数据数组生成对应的标签数组\r\n  使用map() + 递归调用\r\n  */\r\n  getMenuNodes_map = (menuList) => {\r\n    return menuList.map(item => {\r\n      /*\r\n        {\r\n          title: '首页', // 菜单标题名称\r\n          key: '/home', // 对应的path\r\n          icon: 'home', // 图标名称\r\n          children: [], // 可能有, 也可能没有\r\n        }\r\n\r\n        <Menu.Item key=\"/home\">\r\n          <Link to='/home'>\r\n            <Icon type=\"pie-chart\"/>\r\n            <span>首页</span>\r\n          </Link>\r\n        </Menu.Item>\r\n\r\n        <SubMenu\r\n          key=\"sub1\"\r\n          title={\r\n            <span>\r\n              <Icon type=\"mail\"/>\r\n              <span>商品</span>\r\n            </span>\r\n          }\r\n        >\r\n          <Menu.Item/>\r\n          <Menu.Item/>\r\n        </SubMenu>\r\n      */\r\n      if(!item.children) {\r\n        return (\r\n          <Menu.Item key={item.key}>\r\n            <Link to={item.key}>\r\n              <Icon type={item.icon}/>\r\n              <span>{item.title}</span>\r\n            </Link>\r\n          </Menu.Item>\r\n        )\r\n      } else {\r\n        return (\r\n          <SubMenu\r\n            key={item.key}\r\n            title={\r\n              <span>\r\n              <Icon type={item.icon}/>\r\n              <span>{item.title}</span>\r\n            </span>\r\n            }\r\n          >\r\n            {this.getMenuNodes(item.children)}\r\n          </SubMenu>\r\n        )\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  /*\r\n  根据menu的数据数组生成对应的标签数组\r\n  使用reduce() + 递归调用\r\n  */\r\n  getMenuNodes = (menuList) => {\r\n    // 得到当前请求的路由路径\r\n    const path = this.props.location.pathname\r\n\r\n    return menuList.reduce((pre, item) => {\r\n\r\n      // 如果当前用户有item对应的权限, 才需要显示对应的菜单项\r\n      if (this.hasAuth(item)) {\r\n\r\n\r\n        // 向pre添加<Menu.Item>\r\n        if(!item.children) {\r\n          // 判断item是否是当前对应的item\r\n          if (item.key===path || path.indexOf(item.key)===0) {\r\n            // 更新redux中的headerTitle状态\r\n            this.props.setHeadTitle(item.title)\r\n          }\r\n\r\n          pre.push((\r\n            <Menu.Item key={item.key}>\r\n              <Link to={item.key} onClick={() => this.props.setHeadTitle(item.title)}>\r\n                <Icon type={item.icon}/>\r\n                <span>{item.title}</span>\r\n              </Link>\r\n            </Menu.Item>\r\n          ))\r\n        } else {\r\n          // 查找一个与当前请求路径匹配的子Item\r\n          const cItem = item.children.find(cItem => path.indexOf(cItem.key)===0)\r\n          // 如果存在, 说明当前item的子列表需要打开\r\n          if (cItem) {\r\n            this.openKey = item.key\r\n          }\r\n\r\n\r\n          // 向pre添加<SubMenu>\r\n          pre.push((\r\n            <SubMenu\r\n              key={item.key}\r\n              title={\r\n                <span>\r\n              <Icon type={item.icon}/>\r\n              <span>{item.title}</span>\r\n            </span>\r\n              }\r\n            >\r\n              {this.getMenuNodes(item.children)}\r\n            </SubMenu>\r\n          ))\r\n        }\r\n      }\r\n\r\n      return pre\r\n    }, [])\r\n  }\r\n\r\n  /*\r\n  在第一次render()之前执行一次\r\n  为第一个render()准备数据(必须同步的)\r\n   */\r\n  componentWillMount () {\r\n    this.menuNodes = this.getMenuNodes(menuList)\r\n  }\r\n\r\n  render() {\r\n    // debugger\r\n    // 得到当前请求的路由路径\r\n    let path = this.props.location.pathname\r\n    console.log('render()', path)\r\n    if(path.indexOf('/product')===0) { // 当前请求的是商品或其子路由界面\r\n      path = '/product'\r\n    }\r\n\r\n    // 得到需要打开菜单项的key\r\n    const openKey = this.openKey\r\n\r\n    return (\r\n      <div className=\"left-nav\">\r\n        <Link to='/' className=\"left-nav-header\">\r\n          <img src={logo} alt=\"logo\"/>\r\n          <h1>硅谷后台</h1>\r\n        </Link>\r\n\r\n        <Menu\r\n          mode=\"inline\"\r\n          theme=\"dark\"\r\n          selectedKeys={[path]}\r\n          defaultOpenKeys={[openKey]}\r\n        >\r\n\r\n          {\r\n            this.menuNodes\r\n          }\r\n\r\n        </Menu>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n/*\r\nwithRouter高阶组件:\r\n包装非路由组件, 返回一个新的组件\r\n新的组件向非路由组件传递3个属性: history/location/match\r\n */\r\nexport default connect(\r\n  state => ({user: state.user}),\r\n  {setHeadTitle}\r\n)(withRouter(LeftNav))","import React from 'react'\r\nimport './index.less'\r\n/*\r\n外形像链接的按钮\r\n */\r\nexport default function LinkButton(props) {\r\n  return <button {...props} className=\"link-button\"></button>\r\n}","/*\r\n包含n个日期时间处理的工具函数模块\r\n*/\r\n\r\n/*\r\n  格式化日期\r\n*/\r\nexport function formateDate(time) {\r\n  if (!time) return ''\r\n  let date = new Date(time)\r\n  return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\r\n    + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds()\r\n}","import React, {Component} from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport { Modal} from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport LinkButton from '../link-button'\r\nimport {reqWeather} from '../../api'\r\nimport menuList from '../../config/menuConfig'\r\nimport {formateDate} from '../../utils/dateUtils'\r\nimport './index.less'\r\nimport {logout} from '../../redux/actions'\r\n\r\n/*\r\n左侧导航的组件\r\n */\r\nclass Header extends Component {\r\n\r\n  state = {\r\n    currentTime: formateDate(Date.now()), // 当前时间字符串\r\n    dayPictureUrl: '', // 天气图片url\r\n    weather: '', // 天气的文本\r\n  }\r\n\r\n  getTime = () => {\r\n    // 每隔1s获取当前时间, 并更新状态数据currentTime\r\n    this.intervalId = setInterval(() => {\r\n      const currentTime = formateDate(Date.now())\r\n      this.setState({currentTime})\r\n    }, 1000)\r\n  }\r\n\r\n  getWeather = async () => {\r\n    // 调用接口请求异步获取数据\r\n    const {dayPictureUrl, weather} = await reqWeather('北京')\r\n    // 更新状态\r\n    this.setState({dayPictureUrl, weather})\r\n  }\r\n\r\n  getTitle = () => {\r\n    // 得到当前请求路径\r\n    const path = this.props.location.pathname\r\n    let title\r\n    menuList.forEach(item => {\r\n      if (item.key===path) { // 如果当前item对象的key与path一样,item的title就是需要显示的title\r\n        title = item.title\r\n      } else if (item.children) {\r\n        // 在所有子item中查找匹配的\r\n        const cItem = item.children.find(cItem => path.indexOf(cItem.key)===0)\r\n        // 如果有值才说明有匹配的\r\n        if(cItem) {\r\n          // 取出它的title\r\n          title = cItem.title\r\n        }\r\n      }\r\n    })\r\n    return title\r\n  }\r\n\r\n  /*\r\n  退出登陆\r\n   */\r\n  logout = () => {\r\n    // 显示确认框\r\n    Modal.confirm({\r\n      content: '确定退出吗?',\r\n      onOk: () => {\r\n        console.log('OK', this)\r\n        this.props.logout()\r\n      }\r\n    })\r\n  }\r\n\r\n  /*\r\n  第一次render()之后执行一次\r\n  一般在此执行异步操作: 发ajax请求/启动定时器\r\n   */\r\n  componentDidMount () {\r\n    // 获取当前的时间\r\n    this.getTime()\r\n    // 获取当前天气\r\n    this.getWeather()\r\n  }\r\n  /*\r\n  // 不能这么做: 不会更新显示\r\n  componentWillMount () {\r\n    this.title = this.getTitle()\r\n  }*/\r\n\r\n  /*\r\n  当前组件卸载之前调用\r\n   */\r\n  componentWillUnmount () {\r\n    // 清除定时器\r\n    clearInterval(this.intervalId)\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const {currentTime, dayPictureUrl, weather} = this.state\r\n\r\n    const username = this.props.user.username\r\n\r\n    // 得到当前需要显示的title\r\n    // const title = this.getTitle()\r\n    const title = this.props.headTitle\r\n    return (\r\n      <div className=\"header\">\r\n        <div className=\"header-top\">\r\n          <span>欢迎, {username}</span>\r\n          <LinkButton onClick={this.logout}>退出</LinkButton>\r\n        </div>\r\n        <div className=\"header-bottom\">\r\n          <div className=\"header-bottom-left\">{title}</div>\r\n          <div className=\"header-bottom-right\">\r\n            <span>{currentTime}</span>\r\n            <img src={dayPictureUrl} alt=\"weather\"/>\r\n            <span>{weather}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({headTitle: state.headTitle, user: state.user}),\r\n  {logout}\r\n)(withRouter(Header))","import React from \"react\"\r\nimport {\r\n  Chart,\r\n  Geom,\r\n  Axis,\r\n  Tooltip,\r\n  Legend,\r\n} from \"bizcharts\"\r\nimport DataSet from \"@antv/data-set\"\r\n\r\nexport default class Line extends React.Component {\r\n  render() {\r\n    const data = [\r\n      {\r\n        month: \"Jan\",\r\n        a: 7.0,\r\n        b: 3.9,\r\n        c: 5.9\r\n      },\r\n      {\r\n        month: \"Feb\",\r\n        a: 6.9,\r\n        b: 4.2,\r\n        c: 1.9\r\n      },\r\n      {\r\n        month: \"Mar\",\r\n        a: 9.5,\r\n        b: 5.7,\r\n        c: 3.9\r\n      },\r\n      {\r\n        month: \"Apr\",\r\n        a: 14.5,\r\n        b: 8.5,\r\n        c: 5.5\r\n      },\r\n      {\r\n        month: \"May\",\r\n        a: 18.4,\r\n        b: 11.9,\r\n        c: 8.9\r\n      },\r\n      {\r\n        month: \"Jun\",\r\n        a: 21.5,\r\n        b: 15.2,\r\n        c: 10.0\r\n      },\r\n      {\r\n        month: \"Jul\",\r\n        a: 25.2,\r\n        b: 17.0,\r\n        c: 12.9\r\n      },\r\n      {\r\n        month: \"Aug\",\r\n        a: 26.5,\r\n        b: 16.6,\r\n        c: 15.9\r\n      },\r\n      {\r\n        month: \"Sep\",\r\n        a: 23.3,\r\n        b: 14.2,\r\n        c: 20.7\r\n      },\r\n      {\r\n        month: \"Oct\",\r\n        a: 18.3,\r\n        b: 10.3,\r\n        c: 25.9\r\n      },\r\n      {\r\n        month: \"Nov\",\r\n        a: 13.9,\r\n        b: 6.6,\r\n        c: 30.9\r\n      },\r\n      {\r\n        month: \"Dec\",\r\n        a: 9.6,\r\n        b: 4.8,\r\n        c: 35.9\r\n      }\r\n    ]\r\n    const ds = new DataSet()\r\n    const dv = ds.createView().source(data)\r\n    dv.transform({\r\n      type: \"fold\",\r\n      fields: [\"a\", \"b\", \"c\"],\r\n      // 展开字段集\r\n      key: \"city\",\r\n      // key字段\r\n      value: \"temperature\" // value字段\r\n    })\r\n    const cols = {\r\n      month: {\r\n        range: [0, 1]\r\n      }\r\n    }\r\n    return (\r\n      <div style={{float: 'right', width: 750, height: 300}}>\r\n        <Chart height={250} data={dv} scale={cols} forceFit>\r\n          <Legend/>\r\n          <Axis name=\"month\"/>\r\n          <Axis\r\n            name=\"temperature\"\r\n            label={{\r\n              formatter: val => `${val}万个`\r\n            }}\r\n          />\r\n          <Tooltip\r\n            crosshairs={{\r\n              type: \"y\"\r\n            }}\r\n          />\r\n          <Geom\r\n            type=\"line\"\r\n            position=\"month*temperature\"\r\n            size={2}\r\n            color={\"city\"}\r\n            shape={\"smooth\"}\r\n          />\r\n          <Geom\r\n            type=\"point\"\r\n            position=\"month*temperature\"\r\n            size={4}\r\n            shape={\"circle\"}\r\n            color={\"city\"}\r\n            style={{\r\n              stroke: \"#fff\",\r\n              lineWidth: 1\r\n            }}\r\n          />\r\n        </Chart>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport {\r\n  Chart,\r\n  Geom,\r\n  Axis,\r\n  Tooltip,\r\n} from \"bizcharts\"\r\n\r\nexport default class Bar extends React.Component {\r\n  render() {\r\n    const data = [\r\n      {\r\n        year: \"1月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"2月\",\r\n        sales: 52\r\n      },\r\n      {\r\n        year: \"3月\",\r\n        sales: 61\r\n      },\r\n      {\r\n        year: \"4月\",\r\n        sales: 145\r\n      },\r\n      {\r\n        year: \"5月\",\r\n        sales: 48\r\n      },\r\n      {\r\n        year: \"6月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"7月\",\r\n        sales: 28\r\n      },\r\n      {\r\n        year: \"8月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"59月\",\r\n        sales: 68\r\n      },\r\n      {\r\n        year: \"10月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"11月\",\r\n        sales: 58\r\n      },\r\n      {\r\n        year: \"12月\",\r\n        sales: 38\r\n      }\r\n    ]\r\n    const cols = {\r\n      sales: {\r\n        tickInterval: 20\r\n      }\r\n    }\r\n    return (\r\n      <div style={{width: '100%', marginLeft: -30}}>\r\n        <Chart height={338} data={data} scale={cols} forceFit>\r\n          <Axis name=\"year\"/>\r\n          <Axis name=\"sales\"/>\r\n          <Tooltip\r\n            crosshairs={{\r\n              type: \"y\"\r\n            }}\r\n          />\r\n          <Geom type=\"interval\" position=\"year*sales\"/>\r\n        </Chart>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {\r\n  Icon,\r\n  Card,\r\n  Statistic,\r\n  DatePicker,\r\n  Timeline\r\n} from 'antd'\r\nimport moment from 'moment'\r\n\r\nimport Line from './line'\r\nimport Bar from './bar'\r\nimport './home.less'\r\n\r\nconst dateFormat = 'YYYY/MM/DD'\r\nconst {RangePicker} = DatePicker\r\n\r\nexport default class Home extends Component {\r\n\r\n  state = {\r\n    isVisited: true\r\n  }\r\n\r\n  handleChange = (isVisited) => {\r\n    return () => this.setState({isVisited})\r\n  }\r\n\r\n  render() {\r\n    const {isVisited} = this.state\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Card\r\n          className=\"home-card\"\r\n          title=\"商品总量\"\r\n          extra={<Icon style={{color: 'rgba(0,0,0,.45)'}} type=\"question-circle\"/>}\r\n          style={{width: 250}}\r\n          headStyle={{color: 'rgba(0,0,0,.45)'}}\r\n        >\r\n          <Statistic\r\n            value={1128163}\r\n            suffix=\"个\"\r\n            style={{fontWeight: 'bolder'}}\r\n          />\r\n          <Statistic\r\n            value={15}\r\n            valueStyle={{fontSize: 15}}\r\n            prefix={'周同比'}\r\n            suffix={<div>%<Icon style={{color: 'red', marginLeft: 10}} type=\"arrow-down\"/></div>}\r\n          />\r\n          <Statistic\r\n            value={10}\r\n            valueStyle={{fontSize: 15}}\r\n            prefix={'日同比'}\r\n            suffix={<div>%<Icon style={{color: '#3f8600', marginLeft: 10}} type=\"arrow-up\"/></div>}\r\n          />\r\n        </Card>\r\n\r\n        <Line/>\r\n\r\n        <Card\r\n          className=\"home-content\"\r\n          title={<div className=\"home-menu\">\r\n            <span className={isVisited ? \"home-menu-active home-menu-visited\" : 'home-menu-visited'}\r\n                  onClick={this.handleChange(true)}>访问量</span>\r\n            <span className={isVisited ? \"\" : 'home-menu-active'} onClick={this.handleChange(false)}>销售量</span>\r\n          </div>}\r\n          extra={<RangePicker\r\n            defaultValue={[moment('2019/01/01', dateFormat), moment('2019/06/01', dateFormat)]}\r\n            format={dateFormat}\r\n          />}\r\n        >\r\n          <Card\r\n            className=\"home-table-left\"\r\n            title={isVisited ? '访问趋势' : '销售趋势'}\r\n            bodyStyle={{padding: 0, height: 275}}\r\n            extra={<Icon type=\"reload\"/>}\r\n          >\r\n            <Bar/>\r\n          </Card>\r\n\r\n          <Card title='任务' extra={<Icon type=\"reload\"/>} className=\"home-table-right\">\r\n            <Timeline>\r\n              <Timeline.Item color=\"green\">新版本迭代会</Timeline.Item>\r\n              <Timeline.Item color=\"green\">完成网站设计初版</Timeline.Item>\r\n              <Timeline.Item color=\"red\">\r\n                <p>联调接口</p>\r\n                <p>功能验收</p>\r\n              </Timeline.Item>\r\n              <Timeline.Item>\r\n                <p>登录功能设计</p>\r\n                <p>权限验证</p>\r\n                <p>页面排版</p>\r\n              </Timeline.Item>\r\n            </Timeline>\r\n          </Card>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input\r\n} from 'antd'\r\n\r\nconst Item = Form.Item\r\nconst Option = Select.Option\r\n\r\n/*\r\n添加分类的form组件\r\n */\r\nclass AddForm extends Component {\r\n\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired, // 用来传递form对象的函数\r\n    categorys: PropTypes.array.isRequired, // 一级分类的数组\r\n    parentId: PropTypes.string.isRequired, // 父分类的ID\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render() {\r\n    const {categorys, parentId} = this.props\r\n    const { getFieldDecorator } = this.props.form\r\n\r\n    return (\r\n      <Form>\r\n        <Item>\r\n          {\r\n            getFieldDecorator('parentId', {\r\n              initialValue: parentId\r\n            })(\r\n              <Select>\r\n                <Option value='0'>一级分类</Option>\r\n                {\r\n                  categorys.map(c => <Option value={c._id}>{c.name}</Option>)\r\n                }\r\n              </Select>\r\n            )\r\n          }\r\n\r\n        </Item>\r\n\r\n        <Item>\r\n          {\r\n            getFieldDecorator('categoryName', {\r\n              initialValue: '',\r\n              rules: [\r\n                {required: true, message: '分类名称必须输入'}\r\n              ]\r\n            })(\r\n              <Input placeholder='请输入分类名称'/>\r\n            )\r\n          }\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(AddForm)","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Form,\r\n  Input\r\n} from 'antd'\r\n\r\nconst Item = Form.Item\r\n\r\n/*\r\n更新分类的form组件\r\n */\r\nclass UpdateForm extends Component {\r\n\r\n  static propTypes = {\r\n    categoryName: PropTypes.string.isRequired,\r\n    setForm: PropTypes.func.isRequired\r\n  }\r\n\r\n  componentWillMount () {\r\n    // 将form对象通过setForm()传递父组件\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render() {\r\n\r\n    const {categoryName} = this.props\r\n    const { getFieldDecorator } = this.props.form\r\n\r\n    return (\r\n      <Form>\r\n        <Item>\r\n          {\r\n            getFieldDecorator('categoryName', {\r\n              initialValue: categoryName,\r\n              rules: [\r\n                {required: true, message: '分类名称必须输入'}\r\n              ]\r\n            })(\r\n              <Input placeholder='请输入分类名称'/>\r\n            )\r\n          }\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(UpdateForm)","import React, {Component} from 'react'\r\nimport {\r\n  Card,\r\n  Table,\r\n  Button,\r\n  Icon,\r\n  message,\r\n  Modal\r\n} from 'antd'\r\n\r\nimport LinkButton from '../../components/link-button'\r\nimport {reqCategorys, reqUpdateCategory, reqAddCategory} from '../../api'\r\nimport AddForm from './add-form'\r\nimport UpdateForm from './update-form'\r\n\r\n/*\r\n商品分类路由\r\n */\r\nexport default class Category extends Component {\r\n\r\n  state = {\r\n    loading: false, // 是否正在获取数据中\r\n    categorys: [], // 一级分类列表\r\n    subCategorys: [], // 二级分类列表\r\n    parentId: '0', // 当前需要显示的分类列表的父分类ID\r\n    parentName: '', // 当前需要显示的分类列表的父分类名称\r\n    showStatus: 0, // 标识添加/更新的确认框是否显示, 0: 都不显示, 1: 显示添加, 2: 显示更新\r\n  }\r\n\r\n  /*\r\n  初始化Table所有列的数组\r\n   */\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: '分类的名称',\r\n        dataIndex: 'name', // 显示数据对应的属性名\r\n      },\r\n      {\r\n        title: '操作',\r\n        width: 300,\r\n        render: (category) => ( // 返回需要显示的界面标签\r\n          <span>\r\n            <LinkButton onClick={() => this.showUpdate(category)}>修改分类</LinkButton>\r\n            {/*如何向事件回调函数传递参数: 先定义一个匿名函数, 在函数调用处理的函数并传入数据*/}\r\n            {this.state.parentId==='0' ? <LinkButton onClick={() => this.showSubCategorys(category)}>查看子分类</LinkButton> : null}\r\n\r\n          </span>\r\n        )\r\n      }\r\n    ]\r\n  }\r\n\r\n\r\n  /*\r\n  异步获取一级/二级分类列表显示\r\n  parentId: 如果没有指定根据状态中的parentId请求, 如果指定了根据指定的请求\r\n   */\r\n  getCategorys = async (parentId) => {\r\n\r\n    // 在发请求前, 显示loading\r\n    this.setState({loading: true})\r\n    parentId = parentId || this.state.parentId\r\n    // 发异步ajax请求, 获取数据\r\n    const result = await reqCategorys(parentId)\r\n    // 在请求完成后, 隐藏loading\r\n    this.setState({loading: false})\r\n\r\n    if(result.status===0) {\r\n      // 取出分类数组(可能是一级也可能二级的)\r\n      const categorys = result.data\r\n      if(parentId==='0') {\r\n        // 更新一级分类状态\r\n        this.setState({\r\n          categorys\r\n        })\r\n        console.log('----', this.state.categorys.length)\r\n      } else {\r\n        // 更新二级分类状态\r\n        this.setState({\r\n          subCategorys: categorys\r\n        })\r\n      }\r\n    } else {\r\n      message.error('获取分类列表失败')\r\n    }\r\n  }\r\n\r\n  /*\r\n  显示指定一级分类对象的二子列表\r\n   */\r\n  showSubCategorys = (category) => {\r\n    // 更新状态\r\n    this.setState({\r\n      parentId: category._id,\r\n      parentName: category.name\r\n    }, () => { // 在状态更新且重新render()后执行\r\n      console.log('parentId', this.state.parentId) // '0'\r\n      // 获取二级分类列表显示\r\n      this.getCategorys()\r\n    })\r\n\r\n    // setState()不能立即获取最新的状态: 因为setState()是异步更新状态的\r\n    // console.log('parentId', this.state.parentId) // '0'\r\n  }\r\n\r\n  /*\r\n  显示指定一级分类列表\r\n   */\r\n  showCategorys = () => {\r\n    // 更新为显示一列表的状态\r\n    this.setState({\r\n      parentId: '0',\r\n      parentName: '',\r\n      subCategorys: []\r\n    })\r\n  }\r\n\r\n  /*\r\n  响应点击取消: 隐藏确定框\r\n   */\r\n  handleCancel = () => {\r\n    // 清除输入数据\r\n    this.form.resetFields()\r\n    // 隐藏确认框\r\n    this.setState({\r\n      showStatus: 0\r\n    })\r\n  }\r\n\r\n  /*\r\n  显示添加的确认框\r\n   */\r\n  showAdd = () => {\r\n    this.setState({\r\n      showStatus: 1\r\n    })\r\n  }\r\n\r\n  /*\r\n  添加分类\r\n   */\r\n  addCategory = () => {\r\n    this.form.validateFields(async (err, values) => {\r\n      if (!err) {\r\n        // 隐藏确认框\r\n        this.setState({\r\n          showStatus: 0\r\n        })\r\n\r\n        // 收集数据, 并提交添加分类的请求\r\n        const {parentId, categoryName} = values\r\n        // 清除输入数据\r\n        this.form.resetFields()\r\n        const result = await reqAddCategory(categoryName, parentId)\r\n        if(result.status===0) {\r\n\r\n          // 添加的分类就是当前分类列表下的分类\r\n          if(parentId===this.state.parentId) {\r\n            // 重新获取当前分类列表显示\r\n            this.getCategorys()\r\n          } else if (parentId==='0'){ // 在二级分类列表下添加一级分类, 重新获取一级分类列表, 但不需要显示一级列表\r\n            this.getCategorys('0')\r\n          }\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  /*\r\n  显示修改的确认框\r\n   */\r\n  showUpdate = (category) => {\r\n    // 保存分类对象\r\n    this.category = category\r\n    // 更新状态\r\n    this.setState({\r\n      showStatus: 2\r\n    })\r\n  }\r\n\r\n  /*\r\n  更新分类\r\n   */\r\n  updateCategory = () => {\r\n    console.log('updateCategory()')\r\n    // 进行表单验证, 只有通过了才处理\r\n    this.form.validateFields(async (err, values) => {\r\n      if(!err) {\r\n        // 1. 隐藏确定框\r\n        this.setState({\r\n          showStatus: 0\r\n        })\r\n\r\n        // 准备数据\r\n        const categoryId = this.category._id\r\n        const {categoryName} = values\r\n        // 清除输入数据\r\n        this.form.resetFields()\r\n\r\n        // 2. 发请求更新分类\r\n        const result = await reqUpdateCategory({categoryId, categoryName})\r\n        if (result.status===0) {\r\n          // 3. 重新显示列表\r\n          this.getCategorys()\r\n        }\r\n      }\r\n    })\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  /*\r\n  为第一次render()准备数据\r\n   */\r\n  componentWillMount () {\r\n    this.initColumns()\r\n  }\r\n\r\n  /*\r\n  执行异步任务: 发异步ajax请求\r\n   */\r\n  componentDidMount () {\r\n    // 获取一级分类列表显示\r\n    this.getCategorys()\r\n  }\r\n\r\n  render() {\r\n\r\n    // 读取状态数据\r\n    const {categorys, subCategorys, parentId, parentName, loading, showStatus} = this.state\r\n    // 读取指定的分类\r\n    const category = this.category || {} // 如果还没有指定一个空对象\r\n\r\n    // card的左侧\r\n    const title = parentId === '0' ? '一级分类列表' : (\r\n      <span>\r\n        <LinkButton onClick={this.showCategorys}>一级分类列表</LinkButton>\r\n        <Icon type='arrow-right' style={{marginRight: 5}}/>\r\n        <span>{parentName}</span>\r\n      </span>\r\n    )\r\n    // Card的右侧\r\n    const extra = (\r\n      <Button type='primary' onClick={this.showAdd}>\r\n        <Icon type='plus'/>\r\n        添加\r\n      </Button>\r\n    )\r\n\r\n    return (\r\n      <Card title={title} extra={extra}>\r\n        <Table\r\n          bordered\r\n          rowKey='_id'\r\n          loading={loading}\r\n          dataSource={parentId==='0' ? categorys : subCategorys}\r\n          columns={this.columns}\r\n          pagination={{defaultPageSize: 5, showQuickJumper: true}}\r\n        />\r\n\r\n        <Modal\r\n          title=\"添加分类\"\r\n          visible={showStatus===1}\r\n          onOk={this.addCategory}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <AddForm\r\n            categorys={categorys}\r\n            parentId={parentId}\r\n            setForm={(form) => {this.form = form}}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal\r\n          title=\"更新分类\"\r\n          visible={showStatus===2}\r\n          onOk={this.updateCategory}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <UpdateForm\r\n            categoryName={category.name}\r\n            setForm={(form) => {this.form = form}}\r\n          />\r\n        </Modal>\r\n      </Card>\r\n    )\r\n  }\r\n}","/*\r\n包含一些常量值的模块\r\n */\r\nexport const PAGE_SIZE = 3 // 每页显示的记录数\r\nexport const BASE_IMG_URL = 'http://localhost:5000/upload/' // 上传图片的基础路径","/*\r\n用来在内存保存一些数据的工具模块\r\n */\r\nexport default {\r\n  user: {}, // 保存当前登陆的user\r\n  product: {}, // 指定的商品对象\r\n}","import React, {Component} from 'react'\r\nimport {\r\n  Card,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Icon,\r\n  Table,\r\n  message\r\n} from 'antd'\r\n\r\nimport LinkButton from '../../components/link-button'\r\nimport {reqProducts, reqSearchProducts, reqUpdateStatus} from '../../api'\r\nimport {PAGE_SIZE} from '../../utils/constants'\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\n\r\nconst Option = Select.Option\r\n\r\n/*\r\nProduct的默认子路由组件\r\n */\r\nexport default class ProductHome extends Component {\r\n\r\n  state = {\r\n    total: 0, // 商品的总数量\r\n    products: [], // 商品的数组\r\n    loading: false, // 是否正在加载中\r\n    searchName: '', // 搜索的关键字\r\n    searchType: 'productName', // 根据哪个字段搜索\r\n  }\r\n\r\n  /*\r\n  初始化table的列的数组\r\n   */\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: '商品名称',\r\n        dataIndex: 'name',\r\n      },\r\n      {\r\n        title: '商品描述',\r\n        dataIndex: 'desc',\r\n      },\r\n      {\r\n        title: '价格',\r\n        dataIndex: 'price',\r\n        render: (price) => '¥' + price  // 当前指定了对应的属性, 传入的是对应的属性值\r\n      },\r\n      {\r\n        width: 100,\r\n        title: '状态',\r\n        // dataIndex: 'status',\r\n        render: (product) => {\r\n          const {status, _id} = product\r\n          const newStatus = status===1 ? 2 : 1\r\n          return (\r\n            <span>\r\n              <Button\r\n                type='primary'\r\n                onClick={() => this.updateStatus(_id, newStatus)}\r\n              >\r\n                {status===1 ? '下架' : '上架'}\r\n              </Button>\r\n              <span>{status===1 ? '在售' : '已下架'}</span>\r\n            </span>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        width: 100,\r\n        title: '操作',\r\n        render: (product) => {\r\n          return (\r\n            <span>\r\n              {/*将product对象使用state传递给目标路由组件*/}\r\n              <LinkButton onClick={() => this.showDetail(product)}>详情</LinkButton>\r\n              <LinkButton onClick={() => this.showUpdate(product)}>修改</LinkButton>\r\n            </span>\r\n          )\r\n        }\r\n      },\r\n    ];\r\n  }\r\n\r\n  /*\r\n  显示商品详情界面\r\n   */\r\n  showDetail = (procut) => {\r\n    // 缓存product对象 ==> 给detail组件使用\r\n    memoryUtils.product = procut\r\n    this.props.history.push('/product/detail')\r\n  }\r\n\r\n  /*\r\n  显示修改商品界面\r\n   */\r\n  showUpdate = (procut) => {\r\n    // 缓存product对象 ==> 给detail组件使用\r\n    memoryUtils.product = procut\r\n    this.props.history.push('/product/addupdate')\r\n  }\r\n\r\n  /*\r\n  获取指定页码的列表数据显示\r\n   */\r\n  getProducts = async (pageNum) => {\r\n    this.pageNum = pageNum // 保存pageNum, 让其它方法可以看到\r\n    this.setState({loading: true}) // 显示loading\r\n\r\n    const {searchName, searchType} = this.state\r\n    // 如果搜索关键字有值, 说明我们要做搜索分页\r\n    let result\r\n    if (searchName) {\r\n      result = await reqSearchProducts({pageNum, pageSize: PAGE_SIZE, searchName, searchType})\r\n    } else { // 一般分页请求\r\n      result = await reqProducts(pageNum, PAGE_SIZE)\r\n    }\r\n\r\n    this.setState({loading: false}) // 隐藏loading\r\n    if (result.status === 0) {\r\n      // 取出分页数据, 更新状态, 显示分页列表\r\n      const {total, list} = result.data\r\n      this.setState({\r\n        total,\r\n        products: list\r\n      })\r\n    }\r\n  }\r\n\r\n  /*\r\n  更新指定商品的状态\r\n   */\r\n  updateStatus = async (productId, status) => {\r\n    const result = await reqUpdateStatus(productId, status)\r\n    if(result.status===0) {\r\n      message.success('更新商品成功')\r\n      this.getProducts(this.pageNum)\r\n    }\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.initColumns()\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getProducts(1)\r\n  }\r\n\r\n  render() {\r\n\r\n    // 取出状态数据\r\n    const {products, total, loading, searchType, searchName} = this.state\r\n\r\n\r\n\r\n    const title = (\r\n      <span>\r\n        <Select\r\n          value= {searchType}\r\n          style={{width: 150}}\r\n          onChange={value => this.setState({searchType:value})}\r\n        >\r\n          <Option value='productName'>按名称搜索</Option>\r\n          <Option value='productDesc'>按描述搜索</Option>\r\n        </Select>\r\n        <Input\r\n          placeholder='关键字'\r\n          style={{width: 150, margin: '0 15px'}}\r\n          value={searchName}\r\n          onChange={event => this.setState({searchName:event.target.value})}\r\n        />\r\n        <Button type='primary' onClick={() => this.getProducts(1)}>搜索</Button>\r\n      </span>\r\n    )\r\n\r\n    const extra = (\r\n      <Button type='primary' onClick={() => this.props.history.push('/product/addupdate')}>\r\n        <Icon type='plus'/>\r\n        添加商品\r\n      </Button>\r\n    )\r\n\r\n    return (\r\n      <Card title={title} extra={extra}>\r\n        <Table\r\n          bordered\r\n          rowKey='_id'\r\n          loading={loading}\r\n          dataSource={products}\r\n          columns={this.columns}\r\n          pagination={{\r\n            current: this.pageNum,\r\n            total,\r\n            defaultPageSize: PAGE_SIZE,\r\n            showQuickJumper: true,\r\n            onChange: this.getProducts\r\n          }}\r\n        />\r\n      </Card>\r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Upload, Icon, Modal, message } from 'antd'\r\nimport {reqDeleteImg} from '../../api'\r\nimport {BASE_IMG_URL} from \"../../utils/constants\";\r\n/*\r\n用于图片上传的组件\r\n */\r\nexport default class PicturesWall extends React.Component {\r\n\r\n  static propTypes = {\r\n    imgs: PropTypes.array\r\n  }\r\n\r\n  state = {\r\n    previewVisible: false, // 标识是否显示大图预览Modal\r\n    previewImage: '', // 大图的url\r\n    fileList: [\r\n      /*{\r\n        uid: '-1', // 每个file都有自己唯一的id\r\n        name: 'xxx.png', // 图片文件名\r\n        status: 'done', // 图片状态: done-已上传, uploading: 正在上传中, removed: 已删除\r\n        url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png', // 图片地址\r\n      },*/\r\n    ],\r\n  }\r\n\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    let fileList = []\r\n\r\n    // 如果传入了imgs属性\r\n    const {imgs} = this.props\r\n    if (imgs && imgs.length>0) {\r\n      fileList = imgs.map((img, index) => ({\r\n        uid: -index, // 每个file都有自己唯一的id\r\n        name: img, // 图片文件名\r\n        status: 'done', // 图片状态: done-已上传, uploading: 正在上传中, removed: 已删除\r\n        url: BASE_IMG_URL + img\r\n      }))\r\n    }\r\n\r\n    // 初始化状态\r\n    this.state = {\r\n      previewVisible: false, // 标识是否显示大图预览Modal\r\n      previewImage: '', // 大图的url\r\n      fileList // 所有已上传图片的数组\r\n    }\r\n  }\r\n\r\n  /*\r\n  获取所有已上传图片文件名的数组\r\n   */\r\n  getImgs  = () => {\r\n    return this.state.fileList.map(file => file.name)\r\n  }\r\n\r\n  /*\r\n  隐藏Modal\r\n   */\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  handlePreview = file => {\r\n    console.log('handlePreview()', file)\r\n    // 显示指定file对应的大图\r\n    this.setState({\r\n      previewImage: file.url || file.thumbUrl,\r\n      previewVisible: true,\r\n    });\r\n  };\r\n\r\n  /*\r\n  file: 当前操作的图片文件(上传/删除)\r\n  fileList: 所有已上传图片文件对象的数组\r\n   */\r\n  handleChange = async ({ file, fileList }) => {\r\n    console.log('handleChange()', file.status, fileList.length, file===fileList[fileList.length-1])\r\n\r\n    // 一旦上传成功, 将当前上传的file的信息修正(name, url)\r\n    if(file.status==='done') {\r\n      const result = file.response  // {status: 0, data: {name: 'xxx.jpg', url: '图片地址'}}\r\n      if(result.status===0) {\r\n        message.success('上传图片成功!')\r\n        const {name, url} = result.data\r\n        file = fileList[fileList.length-1]\r\n        file.name = name\r\n        file.url = url\r\n      } else {\r\n        message.error('上传图片失败')\r\n      }\r\n    } else if (file.status==='removed') { // 删除图片\r\n      const result = await reqDeleteImg(file.name)\r\n      if (result.status===0) {\r\n        message.success('删除图片成功!')\r\n      } else {\r\n        message.error('删除图片失败!')\r\n      }\r\n    }\r\n\r\n    // 在操作(上传/删除)过程中更新fileList状态\r\n    this.setState({ fileList })\r\n  };\r\n\r\n  render() {\r\n    const { previewVisible, previewImage, fileList } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type=\"plus\" />\r\n        <div>Upload</div>\r\n      </div>\r\n    );\r\n    return (\r\n      <div>\r\n        <Upload\r\n          action=\"/manage/img/upload\" /*上传图片的接口地址*/\r\n          accept='image/*'  /*只接收图片格式*/\r\n          name='image' /*请求参数名*/\r\n          listType=\"picture-card\"  /*卡片样式*/\r\n          fileList={fileList}  /*所有已上传图片文件对象的数组*/\r\n          onPreview={this.handlePreview}\r\n          onChange={this.handleChange}\r\n        >\r\n          {fileList.length >= 4 ? null : uploadButton}\r\n        </Upload>\r\n\r\n        <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}","/*\r\n用来指定商品详情的富文本编辑器组件\r\n */\r\nimport React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {EditorState, convertToRaw, ContentState} from 'draft-js'\r\nimport {Editor} from 'react-draft-wysiwyg'\r\nimport draftToHtml from 'draftjs-to-html'\r\nimport htmlToDraft from 'html-to-draftjs'\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\n\r\n\r\nexport default class RichTextEditor extends Component {\r\n  \r\n  static propTypes = {\r\n    detail: PropTypes.string\r\n  }\r\n  \r\n  state = {\r\n    editorState: EditorState.createEmpty(), // 创建一个没有内容的编辑对象\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    const html = this.props.detail\r\n    if (html) { // 如果有值, 根据html格式字符串创建一个对应的编辑对象\r\n      const contentBlock = htmlToDraft(html)\r\n      const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks)\r\n      const editorState = EditorState.createWithContent(contentState)\r\n      this.state = {\r\n        editorState,\r\n      }\r\n    } else {\r\n      this.state = {\r\n        editorState: EditorState.createEmpty(), // 创建一个没有内容的编辑对象\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  /*\r\n  输入过程中实时的回调\r\n   */\r\n  onEditorStateChange = (editorState) => {\r\n    console.log('onEditorStateChange()')\r\n    this.setState({\r\n      editorState,\r\n    })\r\n  }\r\n\r\n  getDetail = () => {\r\n    // 返回输入数据对应的html格式的文本\r\n    return draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\r\n  }\r\n\r\n  uploadImageCallBack = (file) => {\r\n    return new Promise(\r\n      (resolve, reject) => {\r\n        const xhr = new XMLHttpRequest()\r\n        xhr.open('POST', '/manage/img/upload')\r\n        const data = new FormData()\r\n        data.append('image', file)\r\n        xhr.send(data)\r\n        xhr.addEventListener('load', () => {\r\n          const response = JSON.parse(xhr.responseText)\r\n          const url = response.data.url // 得到图片的url\r\n          resolve({data: {link: url}})\r\n        })\r\n        xhr.addEventListener('error', () => {\r\n          const error = JSON.parse(xhr.responseText)\r\n          reject(error)\r\n        })\r\n      }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const {editorState} = this.state\r\n    return (\r\n      <Editor\r\n        editorState={editorState}\r\n        editorStyle={{border: '1px solid black', minHeight: 200, paddingLeft: 10}}\r\n        onEditorStateChange={this.onEditorStateChange}\r\n        toolbar={{\r\n          image: { uploadCallback: this.uploadImageCallBack, alt: { present: true, mandatory: true } },\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}","import React, {PureComponent} from 'react'\r\nimport {\r\n  Card,\r\n  Icon,\r\n  Form,\r\n  Input,\r\n  Cascader,\r\n  Button,\r\n  message\r\n} from 'antd'\r\n\r\nimport PicturesWall from './pictures-wall'\r\nimport RichTextEditor from './rich-text-editor'\r\nimport LinkButton from '../../components/link-button'\r\nimport {reqCategorys, reqAddOrUpdateProduct} from '../../api'\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\n\r\nconst {Item} = Form\r\nconst { TextArea } = Input\r\n\r\n/*\r\nProduct的添加和更新的子路由组件\r\n */\r\nclass ProductAddUpdate extends PureComponent {\r\n\r\n  state = {\r\n    options: [],\r\n  }\r\n\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    // 创建用来保存ref标识的标签对象的容器\r\n    this.pw = React.createRef()\r\n    this.editor = React.createRef()\r\n  }\r\n\r\n  initOptions = async (categorys) => {\r\n    // 根据categorys生成options数组\r\n    const options = categorys.map(c => ({\r\n      value: c._id,\r\n      label: c.name,\r\n      isLeaf: false, // 不是叶子\r\n    }))\r\n\r\n    // 如果是一个二级分类商品的更新\r\n    const {isUpdate, product} = this\r\n    const {pCategoryId} = product\r\n    if(isUpdate && pCategoryId!=='0') {\r\n      // 获取对应的二级分类列表\r\n      const subCategorys = await this.getCategorys(pCategoryId)\r\n      // 生成二级下拉列表的options\r\n      const childOptions = subCategorys.map(c => ({\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true\r\n      }))\r\n\r\n      // 找到当前商品对应的一级option对象\r\n      const targetOption = options.find(option => option.value===pCategoryId)\r\n\r\n      // 关联对应的一级option上\r\n      targetOption.children = childOptions\r\n    }\r\n\r\n\r\n    // 更新options状态\r\n    this.setState({\r\n      options\r\n    })\r\n  }\r\n\r\n  /*\r\n  异步获取一级/二级分类列表, 并显示\r\n  async函数的返回值是一个新的promise对象, promise的结果和值由async的结果来决定\r\n   */\r\n  getCategorys = async (parentId) => {\r\n    const result = await reqCategorys(parentId)   // {status: 0, data: categorys}\r\n    if (result.status===0) {\r\n      const categorys = result.data\r\n      // 如果是一级分类列表\r\n      if (parentId==='0') {\r\n        this.initOptions(categorys)\r\n      } else { // 二级列表\r\n        return categorys  // 返回二级列表 ==> 当前async函数返回的promsie就会成功且value为categorys\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n  验证价格的自定义验证函数\r\n   */\r\n  validatePrice = (rule, value, callback) => {\r\n    console.log(value, typeof value)\r\n    if (value*1 > 0) {\r\n      callback() // 验证通过\r\n    } else {\r\n      callback('价格必须大于0') // 验证没通过\r\n    }\r\n  }\r\n\r\n  /*\r\n  用加载下一级列表的回调函数\r\n   */\r\n  loadData = async selectedOptions => {\r\n    // 得到选择的option对象\r\n    const targetOption = selectedOptions[0]\r\n    // 显示loading\r\n    targetOption.loading = true\r\n\r\n    // 根据选中的分类, 请求获取二级分类列表\r\n    const subCategorys = await this.getCategorys(targetOption.value)\r\n    // 隐藏loading\r\n    targetOption.loading = false\r\n    // 二级分类数组有数据\r\n    if (subCategorys && subCategorys.length>0) {\r\n      // 生成一个二级列表的options\r\n      const childOptions = subCategorys.map(c => ({\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true\r\n      }))\r\n      // 关联到当前option上\r\n      targetOption.children = childOptions\r\n    } else { // 当前选中的分类没有二级分类\r\n      targetOption.isLeaf = true\r\n    }\r\n\r\n    // 更新options状态\r\n    this.setState({\r\n      options: [...this.state.options],\r\n    })\r\n  }\r\n\r\n  submit = () => {\r\n    // 进行表单验证, 如果通过了, 才发送请求\r\n    this.props.form.validateFields(async (error, values) => {\r\n      if (!error) {\r\n\r\n        // 1. 收集数据, 并封装成product对象\r\n        const {name, desc, price, categoryIds} = values\r\n        let pCategoryId, categoryId\r\n        if (categoryIds.length===1) {\r\n          pCategoryId = '0'\r\n          categoryId = categoryIds[0]\r\n        } else {\r\n          pCategoryId = categoryIds[0]\r\n          categoryId = categoryIds[1]\r\n        }\r\n        const imgs = this.pw.current.getImgs()\r\n        const detail = this.editor.current.getDetail()\r\n\r\n        const product = {name, desc, price, imgs, detail, pCategoryId, categoryId}\r\n\r\n        // 如果是更新, 需要添加_id\r\n        if(this.isUpdate) {\r\n          product._id = this.product._id\r\n        }\r\n\r\n        // 2. 调用接口请求函数去添加/更新\r\n        const result = await reqAddOrUpdateProduct(product)\r\n\r\n        // 3. 根据结果提示\r\n        if (result.status===0) {\r\n          message.success(`${this.isUpdate ? '更新' : '添加'}商品成功!`)\r\n          this.props.history.goBack()\r\n        } else {\r\n          message.error(`${this.isUpdate ? '更新' : '添加'}商品失败!`)\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getCategorys('0')\r\n  }\r\n\r\n  componentWillMount () {\r\n    // 取出携带的state\r\n    const product = memoryUtils.product  // 如果是添加没值, 否则有值\r\n    // 保存是否是更新的标识\r\n    this.isUpdate = !!product._id\r\n    // 保存商品(如果没有, 保存是{})\r\n    this.product = product || {}\r\n  }\r\n\r\n  /*\r\n  在卸载之前清除保存的数据\r\n  */\r\n  componentWillUnmount () {\r\n    memoryUtils.product = {}\r\n  }\r\n\r\n  render() {\r\n\r\n    const {isUpdate, product} = this\r\n    const {pCategoryId, categoryId, imgs, detail} = product\r\n    // 用来接收级联分类ID的数组\r\n    const categoryIds = []\r\n    if(isUpdate) {\r\n      // 商品是一个一级分类的商品\r\n      if(pCategoryId==='0') {\r\n        categoryIds.push(categoryId)\r\n      } else {\r\n        // 商品是一个二级分类的商品\r\n        categoryIds.push(pCategoryId)\r\n        categoryIds.push(categoryId)\r\n      }\r\n    }\r\n\r\n    // 指定Item布局的配置对象\r\n    const formItemLayout = {\r\n      labelCol: { span: 2 },  // 左侧label的宽度\r\n      wrapperCol: { span: 8 }, // 右侧包裹的宽度\r\n    }\r\n\r\n    // 头部左侧标题\r\n    const title = (\r\n      <span>\r\n        <LinkButton onClick={() => this.props.history.goBack()}>\r\n          <Icon type='arrow-left' style={{fontSize: 20}}/>\r\n        </LinkButton>\r\n        <span>{isUpdate ? '修改商品' : '添加商品'}</span>\r\n      </span>\r\n    )\r\n\r\n    const {getFieldDecorator} = this.props.form\r\n\r\n    return (\r\n      <Card title={title}>\r\n        <Form {...formItemLayout}>\r\n          <Item label=\"商品名称\">\r\n            {\r\n              getFieldDecorator('name', {\r\n                initialValue: product.name,\r\n                rules: [\r\n                  {required: true, message: '必须输入商品名称'}\r\n                ]\r\n              })(<Input placeholder='请输入商品名称'/>)\r\n            }\r\n          </Item>\r\n          <Item label=\"商品描述\">\r\n            {\r\n              getFieldDecorator('desc', {\r\n                initialValue: product.desc,\r\n                rules: [\r\n                  {required: true, message: '必须输入商品描述'}\r\n                ]\r\n              })(<TextArea placeholder=\"请输入商品描述\" autosize={{ minRows: 2, maxRows: 6 }} />)\r\n            }\r\n\r\n          </Item>\r\n          <Item label=\"商品价格\">\r\n\r\n            {\r\n              getFieldDecorator('price', {\r\n                initialValue: product.price,\r\n                rules: [\r\n                  {required: true, message: '必须输入商品价格'},\r\n                  {validator: this.validatePrice}\r\n                ]\r\n              })(<Input type='number' placeholder='请输入商品价格' addonAfter='元'/>)\r\n            }\r\n          </Item>\r\n          <Item label=\"商品分类\">\r\n            {\r\n              getFieldDecorator('categoryIds', {\r\n                initialValue: categoryIds,\r\n                rules: [\r\n                  {required: true, message: '必须指定商品分类'},\r\n                ]\r\n              })(\r\n                <Cascader\r\n                  placeholder='请指定商品分类'\r\n                  options={this.state.options}  /*需要显示的列表数据数组*/\r\n                  loadData={this.loadData} /*当选择某个列表项, 加载下一级列表的监听回调*/\r\n                />\r\n              )\r\n            }\r\n\r\n          </Item>\r\n          <Item label=\"商品图片\">\r\n            <PicturesWall ref={this.pw} imgs={imgs}/>\r\n          </Item>\r\n          <Item label=\"商品详情\" labelCol={{span: 2}} wrapperCol={{span: 20}}>\r\n            <RichTextEditor ref={this.editor} detail={detail}/>\r\n          </Item>\r\n          <Item>\r\n            <Button type='primary' onClick={this.submit}>提交</Button>\r\n          </Item>\r\n        </Form>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(ProductAddUpdate)\r\n\r\n\r\n/*\r\n1. 子组件调用父组件的方法: 将父组件的方法以函数属性的形式传递给子组件, 子组件就可以调用\r\n2. 父组件调用子组件的方法: 在父组件中通过ref得到子组件标签对象(也就是组件对象), 调用其方法\r\n */\r\n\r\n/*\r\n使用ref\r\n1. 创建ref容器: thi.pw = React.createRef()\r\n2. 将ref容器交给需要获取的标签元素: <PictureWall ref={this.pw} />\r\n3. 通过ref容器读取标签元素: this.pw.current\r\n */","import React, {Component} from 'react'\r\nimport {\r\n  Card,\r\n  Icon,\r\n  List\r\n} from 'antd'\r\n\r\nimport LinkButton from '../../components/link-button'\r\nimport {BASE_IMG_URL} from '../../utils/constants'\r\nimport {reqCategory} from '../../api'\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\n\r\nconst Item = List.Item\r\n\r\n\r\n/*\r\nProduct的详情子路由组件\r\n */\r\nexport default class ProductDetail extends Component {\r\n\r\n  state = {\r\n    cName1: '', // 一级分类名称\r\n    cName2: '', // 二级分类名称\r\n  }\r\n\r\n  async componentDidMount () {\r\n\r\n    // 得到当前商品的分类ID\r\n    const {pCategoryId, categoryId} = memoryUtils.product\r\n    if(pCategoryId==='0') { // 一级分类下的商品\r\n      const result = await reqCategory(categoryId)\r\n      const cName1 = result.data.name\r\n      this.setState({cName1})\r\n    } else { // 二级分类下的商品\r\n      /*\r\n      //通过多个await方式发多个请求: 后面一个请求是在前一个请求成功返回之后才发送\r\n      const result1 = await reqCategory(pCategoryId) // 获取一级分类列表\r\n      const result2 = await reqCategory(categoryId) // 获取二级分类\r\n      const cName1 = result1.data.name\r\n      const cName2 = result2.data.name\r\n      */\r\n\r\n      // 一次性发送多个请求, 只有都成功了, 才正常处理\r\n      const results = await Promise.all([reqCategory(pCategoryId), reqCategory(categoryId)])\r\n      const cName1 = results[0].data.name\r\n      const cName2 = results[1].data.name\r\n      this.setState({\r\n        cName1,\r\n        cName2\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  /*\r\n 在卸载之前清除保存的数据\r\n */\r\n  componentWillUnmount () {\r\n    memoryUtils.product = {}\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    // 读取携带过来的state数据\r\n    const {name, desc, price, detail, imgs} = memoryUtils.product\r\n    const {cName1, cName2} = this.state\r\n\r\n    const title = (\r\n      <span>\r\n        <LinkButton>\r\n          <Icon\r\n            type='arrow-left'\r\n            style={{marginRight: 10, fontSize: 20}}\r\n            onClick={() => this.props.history.goBack()}\r\n          />\r\n        </LinkButton>\r\n\r\n        <span>商品详情</span>\r\n      </span>\r\n    )\r\n    return (\r\n      <Card title={title} className='product-detail'>\r\n        <List>\r\n          <Item>\r\n            <span className=\"left\">商品名称:</span>\r\n            <span>{name}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">商品描述:</span>\r\n            <span>{desc}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">商品价格:</span>\r\n            <span>{price}元</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">所属分类:</span>\r\n            <span>{cName1} {cName2 ? ' --> '+cName2 : ''}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">商品图片:</span>\r\n            <span>\r\n              {\r\n                imgs.map(img => (\r\n                  <img\r\n                    key={img}\r\n                    src={BASE_IMG_URL + img}\r\n                    className=\"product-img\"\r\n                    alt=\"img\"\r\n                  />\r\n                ))\r\n              }\r\n            </span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">商品详情:</span>\r\n            <span dangerouslySetInnerHTML={{__html: detail}}>\r\n            </span>\r\n          </Item>\r\n\r\n        </List>\r\n      </Card>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\n\r\nimport ProductHome from './home'\r\nimport ProductAddUpdate from './add-update'\r\nimport ProductDetail from './detail'\r\n\r\nimport './product.less'\r\n\r\n/*\r\n商品路由\r\n */\r\nexport default class Product extends Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route path='/product' component={ProductHome} exact/> {/*路径完全匹配*/}\r\n        <Route path='/product/addupdate' component={ProductAddUpdate}/>\r\n        <Route path='/product/detail' component={ProductDetail}/>\r\n        <Redirect to='/product'/>\r\n      </Switch>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Form,\r\n  Input\r\n} from 'antd'\r\n\r\nconst Item = Form.Item\r\n\r\n/*\r\n添加分类的form组件\r\n */\r\nclass AddForm extends Component {\r\n\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired, // 用来传递form对象的函数\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form\r\n    // 指定Item布局的配置对象\r\n    const formItemLayout = {\r\n      labelCol: { span: 4 },  // 左侧label的宽度\r\n      wrapperCol: { span: 15 }, // 右侧包裹的宽度\r\n    }\r\n\r\n    return (\r\n      <Form>\r\n        <Item label='角色名称' {...formItemLayout}>\r\n          {\r\n            getFieldDecorator('roleName', {\r\n              initialValue: '',\r\n              rules: [\r\n                {required: true, message: '角色名称必须输入'}\r\n              ]\r\n            })(\r\n              <Input placeholder='请输入角色名称'/>\r\n            )\r\n          }\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(AddForm)","import React, {PureComponent} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Form,\r\n  Input,\r\n  Tree\r\n} from 'antd'\r\nimport menuList from '../../config/menuConfig'\r\n\r\nconst Item = Form.Item\r\n\r\nconst { TreeNode } = Tree;\r\n\r\n/*\r\n添加分类的form组件\r\n */\r\nexport default class AuthForm extends PureComponent {\r\n\r\n  static propTypes = {\r\n    role: PropTypes.object\r\n  }\r\n\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    // 根据传入角色的menus生成初始状态\r\n    const {menus} = this.props.role\r\n    this.state = {\r\n      checkedKeys: menus\r\n    }\r\n  }\r\n\r\n  /*\r\n  为父组件提交获取最新menus数据的方法\r\n   */\r\n  getMenus = () => this.state.checkedKeys\r\n\r\n\r\n  getTreeNodes = (menuList) => {\r\n    return menuList.reduce((pre, item) => {\r\n      pre.push(\r\n        <TreeNode title={item.title} key={item.key}>\r\n          {item.children ? this.getTreeNodes(item.children) : null}\r\n        </TreeNode>\r\n      )\r\n      return pre\r\n    }, [])\r\n  }\r\n\r\n  // 选中某个node时的回调\r\n  onCheck = checkedKeys => {\r\n    console.log('onCheck', checkedKeys);\r\n    this.setState({ checkedKeys });\r\n  };\r\n\r\n\r\n  componentWillMount () {\r\n    this.treeNodes = this.getTreeNodes(menuList)\r\n  }\r\n\r\n  // 根据新传入的role来更新checkedKeys状态\r\n  /*\r\n  当组件接收到新的属性时自动调用\r\n   */\r\n  componentWillReceiveProps (nextProps) {\r\n    console.log('componentWillReceiveProps()', nextProps)\r\n    const menus = nextProps.role.menus\r\n    this.setState({\r\n      checkedKeys: menus\r\n    })\r\n    // this.state.checkedKeys = menus\r\n  }\r\n\r\n  render() {\r\n    console.log('AuthForm render()')\r\n    const {role} = this.props\r\n    const {checkedKeys} = this.state\r\n    // 指定Item布局的配置对象\r\n    const formItemLayout = {\r\n      labelCol: { span: 4 },  // 左侧label的宽度\r\n      wrapperCol: { span: 15 }, // 右侧包裹的宽度\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Item label='角色名称' {...formItemLayout}>\r\n          <Input value={role.name} disabled/>\r\n        </Item>\r\n\r\n        <Tree\r\n          checkable\r\n          defaultExpandAll={true}\r\n          checkedKeys={checkedKeys}\r\n          onCheck={this.onCheck}\r\n        >\r\n          <TreeNode title=\"平台权限\" key=\"all\">\r\n            {this.treeNodes}\r\n          </TreeNode>\r\n        </Tree>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {\r\n  Card,\r\n  Button,\r\n  Table,\r\n  Modal,\r\n  message\r\n} from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {PAGE_SIZE} from \"../../utils/constants\"\r\nimport {reqRoles, reqAddRole, reqUpdateRole} from '../../api'\r\nimport AddForm from './add-form'\r\nimport AuthForm from './auth-form'\r\nimport {formateDate} from '../../utils/dateUtils'\r\nimport {logout} from '../../redux/actions'\r\n\r\n/*\r\n角色路由\r\n */\r\nclass Role extends Component {\r\n\r\n  state = {\r\n    roles: [], // 所有角色的列表\r\n    role: {}, // 选中的role\r\n    isShowAdd: false, // 是否显示添加界面\r\n    isShowAuth: false, // 是否显示设置权限界面\r\n  }\r\n\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.auth = React.createRef()\r\n  }\r\n\r\n  initColumn = () => {\r\n    this.columns = [\r\n      {\r\n        title: '角色名称',\r\n        dataIndex: 'name'\r\n      },\r\n      {\r\n        title: '创建时间',\r\n        dataIndex: 'create_time',\r\n        render: (create_time) => formateDate(create_time)\r\n      },\r\n      {\r\n        title: '授权时间',\r\n        dataIndex: 'auth_time',\r\n        render: formateDate\r\n      },\r\n      {\r\n        title: '授权人',\r\n        dataIndex: 'auth_name'\r\n      },\r\n    ]\r\n  }\r\n\r\n  getRoles = async () => {\r\n    const result = await reqRoles()\r\n    if (result.status===0) {\r\n      const roles = result.data\r\n      this.setState({\r\n        roles\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  onRow = (role) => {\r\n    return {\r\n      onClick: event => { // 点击行\r\n        console.log('row onClick()', role)\r\n        // alert('点击行')\r\n        this.setState({\r\n          role\r\n        })\r\n      },\r\n    }\r\n  }\r\n\r\n  /*\r\n  添加角色\r\n   */\r\n  addRole = () => {\r\n    // 进行表单验证, 只能通过了才向下处理\r\n    this.form.validateFields(async (error, values) => {\r\n      if (!error) {\r\n\r\n        // 隐藏确认框\r\n        this.setState({\r\n          isShowAdd: false\r\n        })\r\n\r\n        // 收集输入数据\r\n        const {roleName} = values\r\n        this.form.resetFields()\r\n\r\n        // 请求添加\r\n        const result = await reqAddRole(roleName)\r\n        // 根据结果提示/更新列表显示\r\n        if (result.status===0) {\r\n          message.success('添加角色成功')\r\n          // this.getRoles()\r\n          // 新产生的角色\r\n          const role = result.data\r\n          // 更新roles状态\r\n          /*const roles = this.state.roles\r\n          roles.push(role)\r\n          this.setState({\r\n            roles\r\n          })*/\r\n\r\n          // 更新roles状态: 基于原本状态数据更新\r\n          this.setState(state => ({\r\n            roles: [...state.roles, role]\r\n          }))\r\n\r\n        } else {\r\n          message.success('添加角色失败')\r\n        }\r\n\r\n      }\r\n    })\r\n\r\n\r\n  }\r\n\r\n  /*\r\n  更新角色\r\n   */\r\n  updateRole = async () => {\r\n\r\n    // 隐藏确认框\r\n    this.setState({\r\n      isShowAuth: false\r\n    })\r\n\r\n    const role = this.state.role\r\n    // 得到最新的menus\r\n    const menus = this.auth.current.getMenus()\r\n    role.menus = menus\r\n    role.auth_time = Date.now()\r\n    role.auth_name = this.props.user.username\r\n\r\n    // 请求更新\r\n    const result = await reqUpdateRole(role)\r\n    if (result.status===0) {\r\n      // this.getRoles()\r\n      // 如果当前更新的是自己角色的权限, 强制退出\r\n      if (role._id === this.props.user.role_id) {\r\n        this.props.logout()\r\n        message.success('当前用户角色权限成功')\r\n      } else {\r\n        message.success('设置角色权限成功')\r\n        this.setState({\r\n          roles: [...this.state.roles]\r\n        })\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.initColumn()\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getRoles()\r\n  }\r\n\r\n  render() {\r\n\r\n    const {roles, role, isShowAdd, isShowAuth} = this.state\r\n\r\n    const title = (\r\n      <span>\r\n        <Button type='primary' onClick={() => this.setState({isShowAdd: true})}>创建角色</Button> &nbsp;&nbsp;\r\n        <Button type='primary' disabled={!role._id} onClick={() => this.setState({isShowAuth: true})}>设置角色权限</Button>\r\n      </span>\r\n    )\r\n\r\n    return (\r\n      <Card title={title}>\r\n        <Table\r\n          bordered\r\n          rowKey='_id'\r\n          dataSource={roles}\r\n          columns={this.columns}\r\n          pagination={{defaultPageSize: PAGE_SIZE}}\r\n          rowSelection={{\r\n            type: 'radio',\r\n            selectedRowKeys: [role._id],\r\n            onSelect: (role) => { // 选择某个radio时回调\r\n              this.setState({\r\n                role\r\n              })\r\n            }\r\n\r\n          }}\r\n          onRow={this.onRow}\r\n        />\r\n\r\n        <Modal\r\n          title=\"添加角色\"\r\n          visible={isShowAdd}\r\n          onOk={this.addRole}\r\n          onCancel={() => {\r\n            this.setState({isShowAdd: false})\r\n            this.form.resetFields()\r\n          }}\r\n        >\r\n          <AddForm\r\n            setForm={(form) => this.form = form}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal\r\n          title=\"设置角色权限\"\r\n          visible={isShowAuth}\r\n          onOk={this.updateRole}\r\n          onCancel={() => {\r\n            this.setState({isShowAuth: false})\r\n          }}\r\n        >\r\n          <AuthForm ref={this.auth} role={role}/>\r\n        </Modal>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({user: state.user}),\r\n  {logout}\r\n)(Role)","import React, {PureComponent} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input\r\n} from 'antd'\r\n\r\nconst Item = Form.Item\r\nconst Option = Select.Option\r\n\r\n/*\r\n添加/修改用户的form组件\r\n */\r\nclass UserForm extends PureComponent {\r\n\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired, // 用来传递form对象的函数\r\n    roles: PropTypes.array.isRequired,\r\n    user: PropTypes.object\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render() {\r\n\r\n    const {roles, user} = this.props\r\n    const { getFieldDecorator } = this.props.form\r\n    // 指定Item布局的配置对象\r\n    const formItemLayout = {\r\n      labelCol: { span: 4 },  // 左侧label的宽度\r\n      wrapperCol: { span: 15 }, // 右侧包裹的宽度\r\n    }\r\n\r\n    return (\r\n      <Form {...formItemLayout}>\r\n        <Item label='用户名'>\r\n          {\r\n            getFieldDecorator('username', {\r\n              initialValue: user.username,\r\n            })(\r\n              <Input placeholder='请输入用户名'/>\r\n            )\r\n          }\r\n        </Item>\r\n\r\n        {\r\n          user._id ? null : (\r\n            <Item label='密码'>\r\n              {\r\n                getFieldDecorator('password', {\r\n                  initialValue: user.password,\r\n                })(\r\n                  <Input type='password' placeholder='请输入密码'/>\r\n                )\r\n              }\r\n            </Item>\r\n          )\r\n        }\r\n\r\n        <Item label='手机号'>\r\n          {\r\n            getFieldDecorator('phone', {\r\n              initialValue: user.phone,\r\n            })(\r\n              <Input placeholder='请输入手机号'/>\r\n            )\r\n          }\r\n        </Item>\r\n        <Item label='邮箱'>\r\n          {\r\n            getFieldDecorator('email', {\r\n              initialValue: user.email,\r\n            })(\r\n              <Input placeholder='请输入邮箱'/>\r\n            )\r\n          }\r\n        </Item>\r\n\r\n        <Item label='角色'>\r\n          {\r\n            getFieldDecorator('role_id', {\r\n              initialValue: user.role_id,\r\n            })(\r\n              <Select>\r\n                {\r\n                  roles.map(role => <Option key={role._id} value={role._id}>{role.name}</Option>)\r\n                }\r\n              </Select>\r\n            )\r\n          }\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(UserForm)","import React, {Component} from 'react'\r\nimport {\r\n  Card,\r\n  Button,\r\n  Table,\r\n  Modal,\r\n  message\r\n} from 'antd'\r\nimport {formateDate} from \"../../utils/dateUtils\"\r\nimport LinkButton from \"../../components/link-button/index\"\r\nimport {reqDeleteUser, reqUsers, reqAddOrUpdateUser} from \"../../api/index\";\r\nimport UserForm from './user-form'\r\n\r\n/*\r\n用户路由\r\n */\r\nexport default class User extends Component {\r\n\r\n  state = {\r\n    users: [], // 所有用户列表\r\n    roles: [], // 所有角色列表\r\n    isShow: false, // 是否显示确认框\r\n  }\r\n\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: '用户名',\r\n        dataIndex: 'username'\r\n      },\r\n      {\r\n        title: '邮箱',\r\n        dataIndex: 'email'\r\n      },\r\n\r\n      {\r\n        title: '电话',\r\n        dataIndex: 'phone'\r\n      },\r\n      {\r\n        title: '注册时间',\r\n        dataIndex: 'create_time',\r\n        render: formateDate\r\n      },\r\n      {\r\n        title: '所属角色',\r\n        dataIndex: 'role_id',\r\n        render: (role_id) => this.roleNames[role_id]\r\n      },\r\n      {\r\n        title: '操作',\r\n        render: (user) => (\r\n          <span>\r\n            <LinkButton onClick={() => this.showUpdate(user)}>修改</LinkButton>\r\n            <LinkButton onClick={() => this.deleteUser(user)}>删除</LinkButton>\r\n          </span>\r\n        )\r\n      },\r\n    ]\r\n  }\r\n\r\n  /*\r\n  根据role的数组, 生成包含所有角色名的对象(属性名用角色id值)\r\n   */\r\n  initRoleNames = (roles) => {\r\n    const roleNames = roles.reduce((pre, role) => {\r\n      pre[role._id] = role.name\r\n      return pre\r\n    }, {})\r\n    // 保存\r\n    this.roleNames = roleNames\r\n  }\r\n\r\n  /*\r\n  显示添加界面\r\n   */\r\n  showAdd = () => {\r\n    this.user = null // 去除前面保存的user\r\n    this.setState({isShow: true})\r\n  }\r\n\r\n  /*\r\n  显示修改界面\r\n   */\r\n  showUpdate = (user) => {\r\n    this.user = user // 保存user\r\n    this.setState({\r\n      isShow: true\r\n    })\r\n  }\r\n\r\n  /*\r\n  删除指定用户\r\n   */\r\n  deleteUser = (user) => {\r\n    Modal.confirm({\r\n      title: `确认删除${user.username}吗?`,\r\n      onOk: async () => {\r\n        const result = await reqDeleteUser(user._id)\r\n        if(result.status===0) {\r\n          message.success('删除用户成功!')\r\n          this.getUsers()\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  /*\r\n  添加/更新用户\r\n   */\r\n  addOrUpdateUser = async () => {\r\n\r\n    this.setState({isShow: false})\r\n\r\n    // 1. 收集输入数据\r\n    const user = this.form.getFieldsValue()\r\n    this.form.resetFields()\r\n    // 如果是更新, 需要给user指定_id属性\r\n    if (this.user) {\r\n      user._id = this.user._id\r\n    }\r\n\r\n    // 2. 提交添加的请求\r\n    const result = await reqAddOrUpdateUser(user)\r\n    // 3. 更新列表显示\r\n    if(result.status===0) {\r\n      message.success(`${this.user ? '修改' : '添加'}用户成功`)\r\n      this.getUsers()\r\n    }\r\n  }\r\n\r\n  getUsers = async () => {\r\n    const result = await reqUsers()\r\n    if (result.status===0) {\r\n      const {users, roles} = result.data\r\n      this.initRoleNames(roles)\r\n      this.setState({\r\n        users,\r\n        roles\r\n      })\r\n    }\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.initColumns()\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getUsers()\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const {users, roles, isShow} = this.state\r\n    const user = this.user || {}\r\n\r\n    const title = <Button type='primary' onClick={this.showAdd}>创建用户</Button>\r\n\r\n    return (\r\n      <Card title={title}>\r\n        <Table\r\n          bordered\r\n          rowKey='_id'\r\n          dataSource={users}\r\n          columns={this.columns}\r\n          pagination={{defaultPageSize: 2}}\r\n        />\r\n\r\n        <Modal\r\n          title={user._id ? '修改用户' : '添加用户'}\r\n          visible={isShow}\r\n          onOk={this.addOrUpdateUser}\r\n          onCancel={() => {\r\n            this.form.resetFields()\r\n            this.setState({isShow: false})\r\n          }}\r\n        >\r\n          <UserForm\r\n            setForm={form => this.form = form}\r\n            roles={roles}\r\n            user={user}\r\n          />\r\n        </Modal>\r\n\r\n      </Card>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Card, Button} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的柱状图路由组件\r\n */\r\nexport default class Bar extends Component {\r\n\r\n  state = {\r\n    sales: [5, 20, 36, 10, 10, 20], // 销量的数组\r\n    stores: [6, 10, 25, 20, 15, 10], // 库存的数组\r\n  }\r\n\r\n  update = () => {\r\n    this.setState(state => ({\r\n      sales: state.sales.map(sale => sale + 1),\r\n      stores: state.stores.reduce((pre, store) => {\r\n        pre.push(store-1)\r\n        return pre\r\n      }, []),\r\n    }))\r\n  }\r\n\r\n  /*\r\n  返回柱状图的配置对象\r\n   */\r\n  getOption = (sales, stores) => {\r\n    return {\r\n      title: {\r\n        text: 'ECharts 入门示例'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data:['销量', '库存']\r\n      },\r\n      xAxis: {\r\n        data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\r\n      },\r\n      yAxis: {},\r\n      series: [{\r\n        name: '销量',\r\n        type: 'bar',\r\n        data: sales\r\n      }, {\r\n        name: '库存',\r\n        type: 'bar',\r\n        data: stores\r\n      }]\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {sales, stores} = this.state\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type='primary' onClick={this.update}>更新</Button>\r\n        </Card>\r\n\r\n        <Card title='柱状图一'>\r\n          <ReactEcharts option={this.getOption(sales, stores)} />\r\n        </Card>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Card, Button} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的折线图路由组件\r\n */\r\nexport default class Line extends Component {\r\n\r\n  state = {\r\n    sales: [5, 20, 36, 10, 10, 20], // 销量的数组\r\n    stores: [6, 10, 25, 20, 15, 10], // 库存的数组\r\n  }\r\n\r\n  update = () => {\r\n    this.setState(state => ({\r\n      sales: state.sales.map(sale => sale + 1),\r\n      stores: state.stores.reduce((pre, store) => {\r\n        pre.push(store-1)\r\n        return pre\r\n      }, []),\r\n    }))\r\n  }\r\n\r\n  /*\r\n  返回柱状图的配置对象\r\n   */\r\n  getOption = (sales, stores) => {\r\n    return {\r\n      title: {\r\n        text: 'ECharts 入门示例'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data:['销量', '库存']\r\n      },\r\n      xAxis: {\r\n        data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\r\n      },\r\n      yAxis: {},\r\n      series: [{\r\n        name: '销量',\r\n        type: 'line',\r\n        data: sales\r\n      }, {\r\n        name: '库存',\r\n        type: 'line',\r\n        data: stores\r\n      }]\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {sales, stores} = this.state\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type='primary' onClick={this.update}>更新</Button>\r\n        </Card>\r\n\r\n        <Card title='折线图一'>\r\n          <ReactEcharts option={this.getOption(sales, stores)} />\r\n        </Card>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Card} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的饼图路由组件\r\n */\r\nexport default class Pie extends Component {\r\n\r\n  getOption = () => {\r\n    return {\r\n      title : {\r\n        text: '某站点用户访问来源',\r\n        subtext: '纯属虚构',\r\n        x:'center'\r\n      },\r\n      tooltip : {\r\n        trigger: 'item',\r\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n      },\r\n      legend: {\r\n        orient: 'vertical',\r\n        left: 'left',\r\n        data: ['直接访问','邮件营销','联盟广告','视频广告','搜索引擎']\r\n      },\r\n      series : [\r\n        {\r\n          name: '访问来源',\r\n          type: 'pie',\r\n          radius : '55%',\r\n          center: ['50%', '60%'],\r\n          data:[\r\n            {value:335, name:'直接访问'},\r\n            {value:310, name:'邮件营销'},\r\n            {value:234, name:'联盟广告'},\r\n            {value:135, name:'视频广告'},\r\n            {value:1548, name:'搜索引擎'}\r\n          ],\r\n          itemStyle: {\r\n            emphasis: {\r\n              shadowBlur: 10,\r\n              shadowOffsetX: 0,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    };\r\n\r\n  }\r\n\r\n  getOption2 = () => {\r\n    return {\r\n      backgroundColor: '#2c343c',\r\n\r\n      title: {\r\n        text: 'Customized Pie',\r\n        left: 'center',\r\n        top: 20,\r\n        textStyle: {\r\n          color: '#ccc'\r\n        }\r\n      },\r\n\r\n      tooltip : {\r\n        trigger: 'item',\r\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n      },\r\n\r\n      visualMap: {\r\n        show: false,\r\n        min: 80,\r\n        max: 600,\r\n        inRange: {\r\n          colorLightness: [0, 1]\r\n        }\r\n      },\r\n      series : [\r\n        {\r\n          name:'访问来源',\r\n          type:'pie',\r\n          radius : '55%',\r\n          center: ['50%', '50%'],\r\n          data:[\r\n            {value:335, name:'直接访问'},\r\n            {value:310, name:'邮件营销'},\r\n            {value:274, name:'联盟广告'},\r\n            {value:235, name:'视频广告'},\r\n            {value:400, name:'搜索引擎'}\r\n          ].sort(function (a, b) { return a.value - b.value; }),\r\n          roseType: 'radius',\r\n          label: {\r\n            normal: {\r\n              textStyle: {\r\n                color: 'rgba(255, 255, 255, 0.3)'\r\n              }\r\n            }\r\n          },\r\n          labelLine: {\r\n            normal: {\r\n              lineStyle: {\r\n                color: 'rgba(255, 255, 255, 0.3)'\r\n              },\r\n              smooth: 0.2,\r\n              length: 10,\r\n              length2: 20\r\n            }\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              color: '#c23531',\r\n              shadowBlur: 200,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          },\r\n\r\n          animationType: 'scale',\r\n          animationEasing: 'elasticOut',\r\n          animationDelay: function (idx) {\r\n            return Math.random() * 200;\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card title='饼图一'>\r\n          <ReactEcharts option={this.getOption()} style={{height: 300}}/>\r\n        </Card>\r\n        <Card title='饼图二'>\r\n          <ReactEcharts option={this.getOption2()} style={{height: 300}}/>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react'\r\nimport {Button, Row, Col} from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {setHeadTitle} from '../../redux/actions'\r\nimport './not-found.less'\r\n\r\n/*\r\n前台404页面\r\n */\r\nclass NotFound extends Component {\r\n\r\n  goHome = () => {\r\n    this.props.setHeadTitle('首页')\r\n    this.props.history.replace('/home')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n      <Row className='not-found'>\r\n        <Col span={12} className='left'></Col>\r\n        <Col span={12} className='right'>\r\n          <h1>404</h1>\r\n          <h2>抱歉，你访问的页面不存在</h2>\r\n          <div>\r\n            <Button type='primary' onClick={this.goHome}>\r\n              回到首页\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {setHeadTitle}\r\n)(NotFound)","import React from 'react'\r\nimport './order.less'\r\n\r\n/*\r\nHome路由组件\r\n */\r\nexport default function Order(props) {\r\n  return (\r\n    <div className=\"order\">\r\n      订单管理模块开发中...\r\n    </div>\r\n  )\r\n}","import React, {Component} from 'react'\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\nimport { Layout } from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport LeftNav from '../../components/left-nav'\r\nimport Header from '../../components/header'\r\nimport Home from '../home/home'\r\nimport Category from '../category/category'\r\nimport Product from '../product/product'\r\nimport Role from '../role/role'\r\nimport User from '../user/user'\r\nimport Bar from '../charts/bar'\r\nimport Line from '../charts/line'\r\nimport Pie from '../charts/pie'\r\nimport NotFound from '../not-found/not-found'\r\nimport Order from '../order/order'\r\n\r\nconst { Footer, Sider, Content } = Layout\r\n\r\n/*\r\n后台管理的路由组件\r\n */\r\nclass Admin extends Component {\r\n  render () {\r\n    const user = this.props.user\r\n    // 如果内存没有存储user ==> 当前没有登陆\r\n    if(!user || !user._id) {\r\n      // 自动跳转到登陆(在render()中)\r\n      return <Redirect to='/login'/>\r\n    }\r\n    return (\r\n      <Layout style={{minHeight: '100%'}}>\r\n        <Sider>\r\n          <LeftNav/>\r\n        </Sider>\r\n        <Layout>\r\n          <Header>Header</Header>\r\n          <Content style={{margin: 20, backgroundColor: '#fff'}}>\r\n            <Switch>\r\n              <Redirect exact from='/' to='/home'/>\r\n              <Route path='/home' component={Home}/>\r\n              <Route path='/category' component={Category}/>\r\n              <Route path='/product' component={Product}/>\r\n              <Route path='/role' component={Role}/>\r\n              <Route path='/user' component={User}/>\r\n              <Route path='/charts/bar' component={Bar}/>\r\n              <Route path='/charts/line' component={Line}/>\r\n              <Route path='/charts/pie' component={Pie}/>\r\n              <Route path=\"/order\" component={Order}/>\r\n              <Route component={NotFound}/> {/*上面没有一个匹配, 直接显示*/}\r\n            </Switch>\r\n          </Content>\r\n          <Footer style={{textAlign: 'center', color: '#cccccc'}}>推荐使用谷歌浏览器，可以获得更佳页面操作体验</Footer>\r\n        </Layout>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default connect(\r\n  state => ({user: state.user}),\r\n  {}\r\n)(Admin)","import React, {Component} from 'react'\r\nimport {HashRouter, Route, Switch} from 'react-router-dom'\r\n\r\nimport Login from './pages/login/login'\r\nimport Admin from './pages/admin/admin'\r\n\r\n/*\r\n应用的根组件\r\n */\r\nexport default class App extends Component {\r\n\r\n\r\n  render () {\r\n    return (\r\n      <HashRouter>\r\n        <Switch> {/*只匹配其中一个*/}\r\n          <Route path='/login' component={Login}></Route>\r\n          <Route path='/' component={Admin}></Route>\r\n        </Switch>\r\n      </HashRouter>\r\n    )\r\n  }\r\n}","/*\r\n入口js\r\n */\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport {Provider} from 'react-redux'\r\n\r\nimport store from './redux/store'\r\nimport App from './App'\r\n\r\n// 将App组件标签渲染到index页面的div上\r\nReactDOM.render((\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n), document.getElementById('root'))","module.exports = __webpack_public_path__ + \"static/media/logo.ba1f87ec.png\";"],"sourceRoot":""}